{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Home\\\\Booking\\\\BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './BookingPage.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [venueData, setVenueData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [playDuration, setPlayDuration] = useState(1); // Default 1 hour\n  const [availableDays, setAvailableDays] = useState([]);\n  const [priceperhour, setPricePerHour] = useState(0);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]); // Half-hour slots\n  const shopname = name.replace(/-/g, ' ').split('_')[0];\n  const effectRan = useRef(false);\n  const [address, setAddress] = useState('');\n  useEffect(() => {\n    if (effectRan.current === false) {\n      const fetchVenueData = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/shop/loadground', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name\n            }),\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setVenueData(data.ground);\n            setAddress(data.address);\n            setPricePerHour(data.ground.priceperhour);\n            extractAvailableDays(data.ground.availability);\n          } else {\n            const errorData = await response.json();\n            setError(errorData.message);\n          }\n        } catch (error) {\n          setError('An error occurred while fetching Ground.');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchVenueData();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = true;\n    };\n  }, [name]);\n  const extractAvailableDays = availability => {\n    const days = availability.map(timing => timing.day);\n    setAvailableDays(days);\n  };\n  const openBookingModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeBookingModal = () => {\n    setIsModalOpen(false);\n    setSelectedDate('');\n    setSelectedTime('');\n    setAvailableTimeSlots([]); // Reset available time slots\n    setPlayDuration(1); // Reset play duration to 1 hour\n  };\n  const handleDateSelection = date => {\n    setSelectedDate(date);\n    fetchAvailableTimeSlots(date); // Fetch time slots when a date is selected\n  };\n\n  // Function to generate 30-minute time slots\n  const generateTimeSlots = (start, end) => {\n    const startTime = convertTimeStringToMinutes(start);\n    const endTime = convertTimeStringToMinutes(end);\n    const slots = [];\n    for (let time = startTime; time + 30 <= endTime; time += 30) {\n      const slotStart = convertMinutesToTimeString(time);\n      slots.push(slotStart);\n    }\n    return slots;\n  };\n  const fetchAvailableTimeSlots = date => {\n    const selectedDay = new Date(date).toLocaleString('en-US', {\n      weekday: 'long'\n    });\n    const selectedDayAvailability = venueData.availability.find(availability => availability.day === selectedDay);\n    if (selectedDayAvailability) {\n      const slots = [];\n      selectedDayAvailability.times.forEach(timeSlot => {\n        const generatedSlots = generateTimeSlots(timeSlot.start, timeSlot.end);\n        slots.push(...generatedSlots);\n      });\n      // Adjust available slots based on selected duration\n      adjustSlotsForDuration(slots, selectedDayAvailability.times);\n    } else {\n      setAvailableTimeSlots([]);\n    }\n  };\n  const adjustSlotsForDuration = (slots, times) => {\n    const closingTime = '8:00 PM'; // Example closing time\n    const closingTimeMinutes = convertTimeStringToMinutes(closingTime);\n    const maxStartTime = closingTimeMinutes - playDuration * 60; // Calculate latest start time\n\n    const filteredSlots = slots.filter(slot => {\n      const slotMinutes = convertTimeStringToMinutes(slot);\n      return slotMinutes <= maxStartTime;\n    });\n    setAvailableTimeSlots(filteredSlots);\n  };\n  const handleTimeSelection = time => {\n    setSelectedTime(time);\n  };\n  const handleDurationChange = event => {\n    const duration = event.target.value;\n    setPlayDuration(duration);\n    fetchAvailableTimeSlots(selectedDate); // Refetch time slots when duration changes\n  };\n  const getTodayDate = () => {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  };\n  const isDateAvailable = date => {\n    const day = new Date(date).toLocaleString('en-US', {\n      weekday: 'long'\n    });\n    return availableDays.includes(day);\n  };\n  const isDisabled = date => {\n    return isDateAvailable(date); // Disable the date if it's not available\n  };\n  const convertTimeStringToMinutes = timeString => {\n    const [time, modifier] = timeString.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (modifier === 'PM' && hours !== '12') {\n      hours = parseInt(hours) + 12;\n    }\n    if (modifier === 'AM' && hours === '12') {\n      hours = '00';\n    }\n    return parseInt(hours) * 60 + parseInt(minutes);\n  };\n  const convertMinutesToTimeString = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const modifier = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes} ${modifier}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-loading\",\n      children: \"Loading Ground...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n  if (!venueData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-no-data\",\n      children: \"No venue data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-booking-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"bp-main-title\",\n      children: [shopname, \" - \", venueData.groundname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-content\",\n      children: [/*#__PURE__*/_jsxDEV(VenueDetails, {\n        name: venueData.groundname,\n        dimensions: venueData.grounddimensions ? `Length: ${venueData.grounddimensions.length}m, Width: ${venueData.grounddimensions.width}m` : 'No dimensions available',\n        address: address ? `Address: ${address}` : 'Address not Available',\n        image: venueData.image,\n        rating: venueData.reviews ? (venueData.reviews.reduce((sum, review) => sum + review.rating, 0) / venueData.reviews.length).toFixed(1) : 'No ratings yet',\n        ratingCount: venueData.reviews ? venueData.reviews.length : 0,\n        timing: venueData.availability || [],\n        facilities: venueData.facilities || [],\n        pricePerHour: venueData.priceperhour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-side-info\",\n        children: /*#__PURE__*/_jsxDEV(BookingInfo, {\n          pricePerHour: venueData.priceperhour,\n          onBookNow: openBookingModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bp-close\",\n          onClick: closeBookingModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bp-modal-title\",\n          children: \"Select a Date, Time, and Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: handleDateSelection,\n          filterDate: isDisabled,\n          minDate: new Date(),\n          placeholderText: \"Select a date\",\n          className: \"bp-datepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"bp-duration-title\",\n            children: \"Select Duration (in hours)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: playDuration,\n            onChange: handleDurationChange,\n            className: \"bp-duration-select\",\n            children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1 + index * 0.5,\n              children: [1 + index * 0.5, \" hours\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), selectedDate && playDuration && availableTimeSlots.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"bp-time-title\",\n            children: \"Select a Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTime,\n            onChange: e => handleTimeSelection(e.target.value),\n            className: \"bp-time-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), availableTimeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: slot,\n              children: slot\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bp-book-button\",\n          onClick: handleBookNow,\n          disabled: !selectedTime,\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"zhYz9Eai8X3eDu1XqTb8BdxoKDE=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nconst VenueDetails = ({\n  name,\n  dimensions,\n  address,\n  image,\n  rating,\n  ratingCount,\n  timing,\n  facilities,\n  pricePerHour\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-venue-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: name,\n      className: \"bp-venue-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bp-venue-name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-dimensions\",\n      children: dimensions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-address\",\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-rating\",\n      children: [\"Rating: \", rating, \" (\", ratingCount, \" reviews)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-price\",\n      children: [\"Price per hour: $\", pricePerHour]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bp-timing-title\",\n      children: \"Availability:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bp-timing-list\",\n      children: timing.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [time.day, \": \", time.times.map(t => `${t.start} - ${t.end}`).join(', ')]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bp-facilities-title\",\n      children: \"Facilities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bp-facilities-list\",\n      children: facilities.map((facility, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: facility\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_c2 = VenueDetails;\nconst BookingInfo = ({\n  pricePerHour,\n  onBookNow\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-booking-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bp-info-title\",\n      children: \"Booking Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-info-price\",\n      children: [\"Price per hour: $\", pricePerHour]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bp-book-button\",\n      onClick: onBookNow,\n      children: \"Book Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_c3 = BookingInfo;\nexport default BookingPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingPage\");\n$RefreshReg$(_c2, \"VenueDetails\");\n$RefreshReg$(_c3, \"BookingInfo\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingPage","_s","name","venueData","setVenueData","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","selectedDate","setSelectedDate","selectedTime","setSelectedTime","playDuration","setPlayDuration","availableDays","setAvailableDays","priceperhour","setPricePerHour","availableTimeSlots","setAvailableTimeSlots","shopname","replace","split","effectRan","address","setAddress","current","fetchVenueData","response","fetch","method","headers","body","JSON","stringify","credentials","ok","data","json","ground","extractAvailableDays","availability","errorData","message","days","map","timing","day","openBookingModal","closeBookingModal","handleDateSelection","date","fetchAvailableTimeSlots","generateTimeSlots","start","end","startTime","convertTimeStringToMinutes","endTime","slots","time","slotStart","convertMinutesToTimeString","push","selectedDay","Date","toLocaleString","weekday","selectedDayAvailability","find","times","forEach","timeSlot","generatedSlots","adjustSlotsForDuration","closingTime","closingTimeMinutes","maxStartTime","filteredSlots","filter","slot","slotMinutes","handleTimeSelection","handleDurationChange","event","duration","target","value","getTodayDate","today","toISOString","isDateAvailable","includes","isDisabled","timeString","modifier","hours","minutes","parseInt","Math","floor","mins","formattedHours","formattedMinutes","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groundname","VenueDetails","dimensions","grounddimensions","length","width","image","rating","reviews","reduce","sum","review","toFixed","ratingCount","facilities","pricePerHour","BookingInfo","onBookNow","onClick","selected","onChange","filterDate","minDate","placeholderText","Array","_","index","e","handleBookNow","disabled","_c","src","alt","t","join","facility","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Home/Booking/BookingPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './BookingPage.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst BookingPage = () => {\r\n  const { name } = useParams();\r\n  const [venueData, setVenueData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [playDuration, setPlayDuration] = useState(1); // Default 1 hour\r\n  const [availableDays, setAvailableDays] = useState([]);\r\n  const [priceperhour, setPricePerHour] = useState(0);\r\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]); // Half-hour slots\r\n  const shopname = name.replace(/-/g, ' ').split('_')[0];\r\n  const effectRan = useRef(false);\r\n  const [address, setAddress] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (effectRan.current === false) {\r\n      const fetchVenueData = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/shop/loadground', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name }),\r\n            credentials: 'include',\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setVenueData(data.ground);\r\n            setAddress(data.address);\r\n            setPricePerHour(data.ground.priceperhour);\r\n            extractAvailableDays(data.ground.availability);\r\n          } else {\r\n            const errorData = await response.json();\r\n            setError(errorData.message);\r\n          }\r\n        } catch (error) {\r\n          setError('An error occurred while fetching Ground.');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchVenueData();\r\n      effectRan.current = true;\r\n    }\r\n\r\n    return () => {\r\n      effectRan.current = true;\r\n    };\r\n  }, [name]);\r\n\r\n  const extractAvailableDays = (availability) => {\r\n    const days = availability.map(timing => timing.day);\r\n    setAvailableDays(days);\r\n  };\r\n\r\n  const openBookingModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeBookingModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedDate('');\r\n    setSelectedTime('');\r\n    setAvailableTimeSlots([]); // Reset available time slots\r\n    setPlayDuration(1); // Reset play duration to 1 hour\r\n  };\r\n\r\n  const handleDateSelection = (date) => {\r\n    setSelectedDate(date);\r\n    fetchAvailableTimeSlots(date); // Fetch time slots when a date is selected\r\n  };\r\n\r\n  // Function to generate 30-minute time slots\r\n  const generateTimeSlots = (start, end) => {\r\n    const startTime = convertTimeStringToMinutes(start);\r\n    const endTime = convertTimeStringToMinutes(end);\r\n    const slots = [];\r\n\r\n    for (let time = startTime; time + 30 <= endTime; time += 30) {\r\n      const slotStart = convertMinutesToTimeString(time);\r\n      slots.push(slotStart);\r\n    }\r\n\r\n    return slots;\r\n  };\r\n\r\n  const fetchAvailableTimeSlots = (date) => {\r\n    const selectedDay = new Date(date).toLocaleString('en-US', { weekday: 'long' });\r\n    const selectedDayAvailability = venueData.availability.find(\r\n      (availability) => availability.day === selectedDay\r\n    );\r\n\r\n    if (selectedDayAvailability) {\r\n      const slots = [];\r\n      selectedDayAvailability.times.forEach((timeSlot) => {\r\n        const generatedSlots = generateTimeSlots(timeSlot.start, timeSlot.end);\r\n        slots.push(...generatedSlots);\r\n      });\r\n      // Adjust available slots based on selected duration\r\n      adjustSlotsForDuration(slots, selectedDayAvailability.times);\r\n    } else {\r\n      setAvailableTimeSlots([]);\r\n    }\r\n  };\r\n\r\n  const adjustSlotsForDuration = (slots, times) => {\r\n    const closingTime = '8:00 PM'; // Example closing time\r\n    const closingTimeMinutes = convertTimeStringToMinutes(closingTime);\r\n    const maxStartTime = closingTimeMinutes - (playDuration * 60); // Calculate latest start time\r\n\r\n    const filteredSlots = slots.filter((slot) => {\r\n      const slotMinutes = convertTimeStringToMinutes(slot);\r\n      return slotMinutes <= maxStartTime;\r\n    });\r\n\r\n    setAvailableTimeSlots(filteredSlots);\r\n  };\r\n\r\n  const handleTimeSelection = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n\r\n  const handleDurationChange = (event) => {\r\n    const duration = event.target.value;\r\n    setPlayDuration(duration);\r\n    fetchAvailableTimeSlots(selectedDate); // Refetch time slots when duration changes\r\n  };\r\n\r\n  const getTodayDate = () => {\r\n    const today = new Date();\r\n    return today.toISOString().split('T')[0];\r\n  };\r\n\r\n  const isDateAvailable = (date) => {\r\n    const day = new Date(date).toLocaleString('en-US', { weekday: 'long' });\r\n    return availableDays.includes(day);\r\n  };\r\n\r\n  const isDisabled = (date) => {\r\n    return isDateAvailable(date); // Disable the date if it's not available\r\n  };\r\n\r\n  const convertTimeStringToMinutes = (timeString) => {\r\n    const [time, modifier] = timeString.split(' ');\r\n    let [hours, minutes] = time.split(':');\r\n    if (modifier === 'PM' && hours !== '12') {\r\n      hours = parseInt(hours) + 12;\r\n    }\r\n    if (modifier === 'AM' && hours === '12') {\r\n      hours = '00';\r\n    }\r\n    return parseInt(hours) * 60 + parseInt(minutes);\r\n  };\r\n\r\n  const convertMinutesToTimeString = (minutes) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    const modifier = hours >= 12 ? 'PM' : 'AM';\r\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\r\n    const formattedMinutes = mins.toString().padStart(2, '0');\r\n    return `${formattedHours}:${formattedMinutes} ${modifier}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"bp-loading\">Loading Ground...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"bp-error\">{error}</div>;\r\n  }\r\n\r\n  if (!venueData) {\r\n    return <div className=\"bp-no-data\">No venue data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bp-booking-page\">\r\n      <h1 className=\"bp-main-title\">{shopname} - {venueData.groundname}</h1>\r\n      <div className=\"bp-content\">\r\n        <VenueDetails\r\n          name={venueData.groundname}\r\n          dimensions={venueData.grounddimensions ? `Length: ${venueData.grounddimensions.length}m, Width: ${venueData.grounddimensions.width}m` : 'No dimensions available'}\r\n          address={address ? `Address: ${address}` : 'Address not Available'}\r\n          image={venueData.image}\r\n          rating={venueData.reviews ? (venueData.reviews.reduce((sum, review) => sum + review.rating, 0) / venueData.reviews.length).toFixed(1) : 'No ratings yet'}\r\n          ratingCount={venueData.reviews ? venueData.reviews.length : 0}\r\n          timing={venueData.availability || []}\r\n          facilities={venueData.facilities || []}\r\n          pricePerHour={venueData.priceperhour}\r\n        />\r\n        <div className=\"bp-side-info\">\r\n          <BookingInfo pricePerHour={venueData.priceperhour} onBookNow={openBookingModal} />\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"bp-modal\">\r\n          <div className=\"bp-modal-content\">\r\n            <span className=\"bp-close\" onClick={closeBookingModal}>&times;</span>\r\n            <h2 className=\"bp-modal-title\">Select a Date, Time, and Duration</h2>\r\n            <DatePicker\r\n              selected={selectedDate}\r\n              onChange={handleDateSelection}\r\n              filterDate={isDisabled}\r\n              minDate={new Date()}\r\n              placeholderText=\"Select a date\"\r\n              className=\"bp-datepicker\"\r\n            />\r\n\r\n            {selectedDate && (\r\n              <>\r\n                <h4 className=\"bp-duration-title\">Select Duration (in hours)</h4>\r\n                <select value={playDuration} onChange={handleDurationChange} className=\"bp-duration-select\">\r\n                  {[...Array(5)].map((_, index) => (\r\n                    <option key={index} value={1 + index * 0.5}>\r\n                      {1 + index * 0.5} hours\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </>\r\n            )}\r\n\r\n            {selectedDate && playDuration && availableTimeSlots.length > 0 && (\r\n              <>\r\n                <h4 className=\"bp-time-title\">Select a Start Time</h4>\r\n                <select value={selectedTime} onChange={(e) => handleTimeSelection(e.target.value)} className=\"bp-time-select\">\r\n                  <option value=\"\">Select Time</option>\r\n                  {availableTimeSlots.map((slot, index) => (\r\n                    <option key={index} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select>\r\n              </>\r\n            )}\r\n\r\n            <button className=\"bp-book-button\" onClick={handleBookNow} disabled={!selectedTime}>\r\n              Book Now\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VenueDetails = ({ name, dimensions, address, image, rating, ratingCount, timing, facilities, pricePerHour }) => {\r\n  return (\r\n    <div className=\"bp-venue-details\">\r\n      <img src={image} alt={name} className=\"bp-venue-image\" />\r\n      <h2 className=\"bp-venue-name\">{name}</h2>\r\n      <p className=\"bp-venue-dimensions\">{dimensions}</p>\r\n      <p className=\"bp-venue-address\">{address}</p>\r\n      <p className=\"bp-venue-rating\">Rating: {rating} ({ratingCount} reviews)</p>\r\n      <p className=\"bp-venue-price\">Price per hour: ${pricePerHour}</p>\r\n      <h3 className=\"bp-timing-title\">Availability:</h3>\r\n      <ul className=\"bp-timing-list\">\r\n        {timing.map((time, index) => (\r\n          <li key={index}>{time.day}: {time.times.map(t => `${t.start} - ${t.end}`).join(', ')}</li>\r\n        ))}\r\n      </ul>\r\n      <h3 className=\"bp-facilities-title\">Facilities:</h3>\r\n      <ul className=\"bp-facilities-list\">\r\n        {facilities.map((facility, index) => (\r\n          <li key={index}>{facility}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookingInfo = ({ pricePerHour, onBookNow }) => {\r\n  return (\r\n    <div className=\"bp-booking-info\">\r\n      <h2 className=\"bp-info-title\">Booking Information</h2>\r\n      <p className=\"bp-info-price\">Price per hour: ${pricePerHour}</p>\r\n      <button className=\"bp-book-button\" onClick={onBookNow}>Book Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}