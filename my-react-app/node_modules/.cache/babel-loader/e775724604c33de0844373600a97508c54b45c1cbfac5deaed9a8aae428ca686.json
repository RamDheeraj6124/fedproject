{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Home\\\\Booking\\\\BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './BookingPage.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [venueData, setVenueData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [playDuration, setPlayDuration] = useState(1); // Default 1 hour\n  const [availableDays, setAvailableDays] = useState([]);\n  const [pricePerHour, setPricePerHour] = useState(0);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]); // Time slots based on duration\n  const shopname = name.replace(/-/g, ' ').split('_')[0];\n  const effectRan = useRef(false);\n  const [address, setAddress] = useState('');\n  const timeoutRef = useRef(null); // For debouncing\n\n  useEffect(() => {\n    if (effectRan.current === false) {\n      const fetchVenueData = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/shop/loadground', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name\n            }),\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setVenueData(data.ground);\n            setAddress(data.address);\n            setPricePerHour(data.ground.priceperhour);\n            extractAvailableDays(data.ground.availability);\n          } else {\n            const errorData = await response.json();\n            setError(errorData.message);\n          }\n        } catch (error) {\n          setError('An error occurred while fetching Ground.');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchVenueData();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = true;\n    };\n  }, [name]);\n  const extractAvailableDays = availability => {\n    const days = availability.map(timing => timing.day);\n    setAvailableDays(days);\n  };\n  const openBookingModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeBookingModal = () => {\n    setIsModalOpen(false);\n    setSelectedDate('');\n    setSelectedTime('');\n    setAvailableTimeSlots([]); // Reset available time slots\n    setPlayDuration(1); // Reset play duration to 1 hour\n  };\n  const handleDateSelection = date => {\n    setSelectedDate(date);\n    fetchAvailableTimeSlots(date); // Fetch time slots when a date is selected\n  };\n  const generateTimeSlots = (start, end, duration) => {\n    const startTime = convertTimeStringToMinutes(start);\n    const endTime = convertTimeStringToMinutes(end);\n    const slots = [];\n    for (let time = startTime; time + duration * 60 <= endTime; time += 30) {\n      const slotStart = convertMinutesToTimeString(time);\n      slots.push(slotStart);\n    }\n    return slots;\n  };\n  const fetchAvailableTimeSlots = date => {\n    const selectedDay = new Date(date).toLocaleString('en-US', {\n      weekday: 'long'\n    });\n    const selectedDayAvailability = venueData.availability.find(availability => availability.day === selectedDay);\n    if (selectedDayAvailability) {\n      const slots = [];\n      selectedDayAvailability.times.forEach(timeSlot => {\n        const generatedSlots = generateTimeSlots(timeSlot.start, timeSlot.end, playDuration);\n        slots.push(...generatedSlots);\n      });\n      setAvailableTimeSlots(slots);\n    } else {\n      setAvailableTimeSlots([]);\n    }\n  };\n  const handleTimeSelection = time => {\n    setSelectedTime(time);\n  };\n  const handleDurationChange = event => {\n    const duration = event.target.value;\n    setPlayDuration(duration);\n\n    // Debounce the fetch\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      fetchAvailableTimeSlots(selectedDate); // Refetch time slots when duration changes\n    }, 300);\n  };\n  const getTodayDate = () => {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  };\n  const isDateAvailable = date => {\n    const day = new Date(date).toLocaleString('en-US', {\n      weekday: 'long'\n    });\n    return availableDays.includes(day);\n  };\n  const isDisabled = date => {\n    return !isDateAvailable(date); // Disable the date if it's not available\n  };\n  const convertTimeStringToMinutes = timeString => {\n    const [time, modifier] = timeString.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (modifier === 'PM' && hours !== '12') {\n      hours = parseInt(hours) + 12;\n    }\n    if (modifier === 'AM' && hours === '12') {\n      hours = '00';\n    }\n    return parseInt(hours) * 60 + parseInt(minutes);\n  };\n  const convertMinutesToTimeString = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const modifier = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes} ${modifier}`;\n  };\n  const handleBookNow = async () => {\n    const bookingDetails = {\n      date: selectedDate,\n      time: selectedTime,\n      duration: playDuration,\n      venue: venueData.groundname,\n      address: address,\n      price: pricePerHour * playDuration\n    };\n    try {\n      const response = await fetch('http://localhost:5000/shop/bookground', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingDetails),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        alert(`Booking confirmed! ${result.message}`);\n        closeBookingModal(); // Close modal on successful booking\n      } else {\n        const errorData = await response.json();\n        alert(`Booking failed: ${errorData.message}`);\n      }\n    } catch (error) {\n      alert('An error occurred while booking the ground.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-loading\",\n      children: \"Loading Ground...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  if (!venueData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-no-data\",\n      children: \"No venue data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-booking-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"bp-main-title\",\n      children: [shopname, \" - \", venueData.groundname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-content\",\n      children: [/*#__PURE__*/_jsxDEV(VenueDetails, {\n        name: venueData.groundname,\n        dimensions: venueData.grounddimensions ? `Length: ${venueData.grounddimensions.length}m, Width: ${venueData.grounddimensions.width}m` : 'No dimensions available',\n        address: address ? `Address: ${address}` : 'Address not Available',\n        image: venueData.image,\n        rating: venueData.reviews ? (venueData.reviews.reduce((sum, review) => sum + review.rating, 0) / venueData.reviews.length).toFixed(1) : 'No ratings yet',\n        ratingCount: venueData.reviews ? venueData.reviews.length : 0,\n        timing: venueData.availability || [],\n        facilities: venueData.facilities || [],\n        pricePerHour: venueData.priceperhour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-side-info\",\n        children: /*#__PURE__*/_jsxDEV(BookingInfo, {\n          pricePerHour: venueData.priceperhour,\n          onBookNow: openBookingModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bp-close\",\n          onClick: closeBookingModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bp-modal-title\",\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Select Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: handleDateSelection,\n          minDate: new Date(),\n          filterDate: isDisabled,\n          dateFormat: \"yyyy/MM/dd\",\n          className: \"bp-datepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Select Duration (in hours):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: playDuration,\n          onChange: handleDurationChange,\n          className: \"bp-duration-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Available Time Slots:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTime,\n          onChange: e => handleTimeSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), availableTimeSlots.map((timeSlot, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: timeSlot,\n            children: timeSlot\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bp-book-button\",\n          onClick: handleBookNow,\n          children: \"Confirm Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"9XcCK1VgPyMELRF2V4o5m1CgJ9c=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nconst VenueDetails = ({\n  name,\n  dimensions,\n  address,\n  image,\n  rating,\n  ratingCount,\n  timing,\n  facilities,\n  pricePerHour\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-venue-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: name,\n      className: \"bp-venue-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bp-venue-name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-dimensions\",\n      children: dimensions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-address\",\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-rating\",\n      children: [\"Rating: \", rating, \" (\", ratingCount, \" reviews)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-price\",\n      children: [\"Price per hour: $\", pricePerHour]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-facilities\",\n      children: [\"Facilities: \", facilities.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-venue-timing\",\n      children: [\"Available Timing: \", timing.map(t => `${t.day}: ${t.times.map(t => `${t.start} - ${t.end}`).join(', ')}`).join(' | ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_c2 = VenueDetails;\nconst BookingInfo = ({\n  pricePerHour,\n  onBookNow\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-booking-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bp-booking-title\",\n      children: \"Booking Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bp-booking-price\",\n      children: [\"Price per hour: $\", pricePerHour]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bp-book-now-button\",\n      onClick: onBookNow,\n      children: \"Book Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_c3 = BookingInfo;\nexport default BookingPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingPage\");\n$RefreshReg$(_c2, \"VenueDetails\");\n$RefreshReg$(_c3, \"BookingInfo\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","DatePicker","jsxDEV","_jsxDEV","BookingPage","_s","name","venueData","setVenueData","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","selectedDate","setSelectedDate","selectedTime","setSelectedTime","playDuration","setPlayDuration","availableDays","setAvailableDays","pricePerHour","setPricePerHour","availableTimeSlots","setAvailableTimeSlots","shopname","replace","split","effectRan","address","setAddress","timeoutRef","current","fetchVenueData","response","fetch","method","headers","body","JSON","stringify","credentials","ok","data","json","ground","priceperhour","extractAvailableDays","availability","errorData","message","days","map","timing","day","openBookingModal","closeBookingModal","handleDateSelection","date","fetchAvailableTimeSlots","generateTimeSlots","start","end","duration","startTime","convertTimeStringToMinutes","endTime","slots","time","slotStart","convertMinutesToTimeString","push","selectedDay","Date","toLocaleString","weekday","selectedDayAvailability","find","times","forEach","timeSlot","generatedSlots","handleTimeSelection","handleDurationChange","event","target","value","clearTimeout","setTimeout","getTodayDate","today","toISOString","isDateAvailable","includes","isDisabled","timeString","modifier","hours","minutes","parseInt","Math","floor","mins","formattedHours","formattedMinutes","toString","padStart","handleBookNow","bookingDetails","venue","groundname","price","result","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","VenueDetails","dimensions","grounddimensions","length","width","image","rating","reviews","reduce","sum","review","toFixed","ratingCount","facilities","BookingInfo","onBookNow","onClick","htmlFor","selected","onChange","minDate","filterDate","dateFormat","type","min","e","disabled","index","_c","src","alt","join","t","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Home/Booking/BookingPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './BookingPage.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst BookingPage = () => {\r\n  const { name } = useParams();\r\n  const [venueData, setVenueData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [playDuration, setPlayDuration] = useState(1); // Default 1 hour\r\n  const [availableDays, setAvailableDays] = useState([]);\r\n  const [pricePerHour, setPricePerHour] = useState(0);\r\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]); // Time slots based on duration\r\n  const shopname = name.replace(/-/g, ' ').split('_')[0];\r\n  const effectRan = useRef(false);\r\n  const [address, setAddress] = useState('');\r\n  const timeoutRef = useRef(null); // For debouncing\r\n\r\n  useEffect(() => {\r\n    if (effectRan.current === false) {\r\n      const fetchVenueData = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/shop/loadground', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name }),\r\n            credentials: 'include',\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setVenueData(data.ground);\r\n            setAddress(data.address);\r\n            setPricePerHour(data.ground.priceperhour);\r\n            extractAvailableDays(data.ground.availability);\r\n          } else {\r\n            const errorData = await response.json();\r\n            setError(errorData.message);\r\n          }\r\n        } catch (error) {\r\n          setError('An error occurred while fetching Ground.');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchVenueData();\r\n      effectRan.current = true;\r\n    }\r\n\r\n    return () => {\r\n      effectRan.current = true;\r\n    };\r\n  }, [name]);\r\n\r\n  const extractAvailableDays = (availability) => {\r\n    const days = availability.map(timing => timing.day);\r\n    setAvailableDays(days);\r\n  };\r\n\r\n  const openBookingModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeBookingModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedDate('');\r\n    setSelectedTime('');\r\n    setAvailableTimeSlots([]); // Reset available time slots\r\n    setPlayDuration(1); // Reset play duration to 1 hour\r\n  };\r\n\r\n  const handleDateSelection = (date) => {\r\n    setSelectedDate(date);\r\n    fetchAvailableTimeSlots(date); // Fetch time slots when a date is selected\r\n  };\r\n\r\n  const generateTimeSlots = (start, end, duration) => {\r\n    const startTime = convertTimeStringToMinutes(start);\r\n    const endTime = convertTimeStringToMinutes(end);\r\n    const slots = [];\r\n\r\n    for (let time = startTime; time + (duration * 60) <= endTime; time += 30) {\r\n      const slotStart = convertMinutesToTimeString(time);\r\n      slots.push(slotStart);\r\n    }\r\n\r\n    return slots;\r\n  };\r\n\r\n  const fetchAvailableTimeSlots = (date) => {\r\n    const selectedDay = new Date(date).toLocaleString('en-US', { weekday: 'long' });\r\n    const selectedDayAvailability = venueData.availability.find(\r\n      (availability) => availability.day === selectedDay\r\n    );\r\n\r\n    if (selectedDayAvailability) {\r\n      const slots = [];\r\n      selectedDayAvailability.times.forEach((timeSlot) => {\r\n        const generatedSlots = generateTimeSlots(timeSlot.start, timeSlot.end, playDuration);\r\n        slots.push(...generatedSlots);\r\n      });\r\n      setAvailableTimeSlots(slots);\r\n    } else {\r\n      setAvailableTimeSlots([]);\r\n    }\r\n  };\r\n\r\n  const handleTimeSelection = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n\r\n  const handleDurationChange = (event) => {\r\n    const duration = event.target.value;\r\n    setPlayDuration(duration);\r\n    \r\n    // Debounce the fetch\r\n    clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => {\r\n      fetchAvailableTimeSlots(selectedDate); // Refetch time slots when duration changes\r\n    }, 300);\r\n  };\r\n\r\n  const getTodayDate = () => {\r\n    const today = new Date();\r\n    return today.toISOString().split('T')[0];\r\n  };\r\n\r\n  const isDateAvailable = (date) => {\r\n    const day = new Date(date).toLocaleString('en-US', { weekday: 'long' });\r\n    return availableDays.includes(day);\r\n  };\r\n\r\n  const isDisabled = (date) => {\r\n    return !isDateAvailable(date); // Disable the date if it's not available\r\n  };\r\n\r\n  const convertTimeStringToMinutes = (timeString) => {\r\n    const [time, modifier] = timeString.split(' ');\r\n    let [hours, minutes] = time.split(':');\r\n    if (modifier === 'PM' && hours !== '12') {\r\n      hours = parseInt(hours) + 12;\r\n    }\r\n    if (modifier === 'AM' && hours === '12') {\r\n      hours = '00';\r\n    }\r\n    return parseInt(hours) * 60 + parseInt(minutes);\r\n  };\r\n\r\n  const convertMinutesToTimeString = (minutes) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    const modifier = hours >= 12 ? 'PM' : 'AM';\r\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\r\n    const formattedMinutes = mins.toString().padStart(2, '0');\r\n    return `${formattedHours}:${formattedMinutes} ${modifier}`;\r\n  };\r\n\r\n  const handleBookNow = async () => {\r\n    const bookingDetails = {\r\n      date: selectedDate,\r\n      time: selectedTime,\r\n      duration: playDuration,\r\n      venue: venueData.groundname,\r\n      address: address,\r\n      price: pricePerHour * playDuration,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/bookground', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bookingDetails),\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Booking confirmed! ${result.message}`);\r\n        closeBookingModal(); // Close modal on successful booking\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Booking failed: ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      alert('An error occurred while booking the ground.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"bp-loading\">Loading Ground...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"bp-error\">{error}</div>;\r\n  }\r\n\r\n  if (!venueData) {\r\n    return <div className=\"bp-no-data\">No venue data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bp-booking-page\">\r\n      <h1 className=\"bp-main-title\">{shopname} - {venueData.groundname}</h1>\r\n      <div className=\"bp-content\">\r\n        <VenueDetails\r\n          name={venueData.groundname}\r\n          dimensions={venueData.grounddimensions ? `Length: ${venueData.grounddimensions.length}m, Width: ${venueData.grounddimensions.width}m` : 'No dimensions available'}\r\n          address={address ? `Address: ${address}` : 'Address not Available'}\r\n          image={venueData.image}\r\n          rating={venueData.reviews ? (venueData.reviews.reduce((sum, review) => sum + review.rating, 0) / venueData.reviews.length).toFixed(1) : 'No ratings yet'}\r\n          ratingCount={venueData.reviews ? venueData.reviews.length : 0}\r\n          timing={venueData.availability || []}\r\n          facilities={venueData.facilities || []}\r\n          pricePerHour={venueData.priceperhour}\r\n        />\r\n        <div className=\"bp-side-info\">\r\n          <BookingInfo pricePerHour={venueData.priceperhour} onBookNow={openBookingModal} />\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"bp-modal\">\r\n          <div className=\"bp-modal-content\">\r\n            <span className=\"bp-close\" onClick={closeBookingModal}>&times;</span>\r\n            <h2 className=\"bp-modal-title\">Book Now</h2>\r\n            <label htmlFor=\"date\">Select Date:</label>\r\n            <DatePicker\r\n              selected={selectedDate}\r\n              onChange={handleDateSelection}\r\n              minDate={new Date()}\r\n              filterDate={isDisabled}\r\n              dateFormat=\"yyyy/MM/dd\"\r\n              className=\"bp-datepicker\"\r\n            />\r\n            <label htmlFor=\"duration\">Select Duration (in hours):</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={playDuration}\r\n              onChange={handleDurationChange}\r\n              className=\"bp-duration-input\"\r\n            />\r\n            <label htmlFor=\"time\">Available Time Slots:</label>\r\n            <select value={selectedTime} onChange={(e) => handleTimeSelection(e.target.value)}>\r\n              <option value=\"\" disabled>Select a time</option>\r\n              {availableTimeSlots.map((timeSlot, index) => (\r\n                <option key={index} value={timeSlot}>\r\n                  {timeSlot}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button className=\"bp-book-button\" onClick={handleBookNow}>Confirm Booking</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VenueDetails = ({ name, dimensions, address, image, rating, ratingCount, timing, facilities, pricePerHour }) => {\r\n  return (\r\n    <div className=\"bp-venue-details\">\r\n      <img src={image} alt={name} className=\"bp-venue-image\" />\r\n      <h2 className=\"bp-venue-name\">{name}</h2>\r\n      <p className=\"bp-venue-dimensions\">{dimensions}</p>\r\n      <p className=\"bp-venue-address\">{address}</p>\r\n      <p className=\"bp-venue-rating\">Rating: {rating} ({ratingCount} reviews)</p>\r\n      <p className=\"bp-venue-price\">Price per hour: ${pricePerHour}</p>\r\n      <p className=\"bp-venue-facilities\">Facilities: {facilities.join(', ')}</p>\r\n      <p className=\"bp-venue-timing\">Available Timing: {timing.map(t => `${t.day}: ${t.times.map(t => `${t.start} - ${t.end}`).join(', ')}`).join(' | ')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookingInfo = ({ pricePerHour, onBookNow }) => {\r\n  return (\r\n    <div className=\"bp-booking-info\">\r\n      <h3 className=\"bp-booking-title\">Booking Information</h3>\r\n      <p className=\"bp-booking-price\">Price per hour: ${pricePerHour}</p>\r\n      <button className=\"bp-book-now-button\" onClick={onBookNow}>Book Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}