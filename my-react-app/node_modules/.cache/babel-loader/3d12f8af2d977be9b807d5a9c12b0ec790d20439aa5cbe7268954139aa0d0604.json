{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\Revenuecheck.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RevenueCheck = () => {\n  _s();\n  const [shopRevenue, setShopRevenue] = useState([]);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  useEffect(() => {\n    const checkRevenue = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/admin/checkrevenue', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data); // Debugging: Check the structure of the fetched data\n          setTotalRevenue(data.totalRevenue);\n          setShopRevenue(data.shopRevenues);\n        } else {\n          throw new Error(\"Expected JSON, but received: \");\n        }\n      } catch (error) {\n        console.error(\"Error fetching revenue data:\", error);\n      }\n    };\n    checkRevenue();\n  }, []);\n\n  // Prepare data for Pie Chart\n  const chartData = {\n    labels: shopRevenue.map(shop => shop.shopName),\n    // Map to shop names\n    datasets: [{\n      label: 'Shop Revenue',\n      data: shopRevenue.map(shop => shop.platformFee),\n      // Map to platform fee values\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total Revenue: \", totalRevenue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shop Revenue Breakdown:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: shopRevenue.length > 0 ? shopRevenue.map(shop => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [shop.shopName, \": \", shop.platformFee]\n      }, shop.shopId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No shop revenue data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Revenue Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(RevenueCheck, \"qhhT8v/d617fWT1B24jhPixgPLg=\");\n_c = RevenueCheck;\nexport default RevenueCheck;\nvar _c;\n$RefreshReg$(_c, \"RevenueCheck\");","map":{"version":3,"names":["RevenueCheck","_s","shopRevenue","setShopRevenue","useState","totalRevenue","setTotalRevenue","useEffect","checkRevenue","response","fetch","method","credentials","ok","data","json","console","log","shopRevenues","Error","error","chartData","labels","map","shop","shopName","datasets","label","platformFee","backgroundColor","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","length","shopId","Pie","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Admin/Revenuecheck.jsx"],"sourcesContent":["const RevenueCheck = () => {\r\n    const [shopRevenue, setShopRevenue] = useState([]);\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const checkRevenue = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/admin/checkrevenue', {\r\n                    method: 'GET',\r\n                    credentials: 'include'\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    console.log(data); // Debugging: Check the structure of the fetched data\r\n                    setTotalRevenue(data.totalRevenue);\r\n                    setShopRevenue(data.shopRevenues);\r\n                } else {\r\n                    throw new Error(\"Expected JSON, but received: \");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching revenue data:\", error);\r\n            }\r\n        };\r\n        checkRevenue();\r\n    }, []);\r\n\r\n    // Prepare data for Pie Chart\r\n    const chartData = {\r\n        labels: shopRevenue.map((shop) => shop.shopName), // Map to shop names\r\n        datasets: [{\r\n            label: 'Shop Revenue',\r\n            data: shopRevenue.map((shop) => shop.platformFee), // Map to platform fee values\r\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n        }],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Total Revenue: {totalRevenue}</h1>\r\n            <h2>Shop Revenue Breakdown:</h2>\r\n            <ul>\r\n                {shopRevenue.length > 0 ? (\r\n                    shopRevenue.map((shop) => (\r\n                        <li key={shop.shopId}>{shop.shopName}: {shop.platformFee}</li>\r\n                    ))\r\n                ) : (\r\n                    <li>No shop revenue data available.</li>\r\n                )}\r\n            </ul>\r\n            <h2>Revenue Distribution</h2>\r\n            <Pie data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevenueCheck;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}