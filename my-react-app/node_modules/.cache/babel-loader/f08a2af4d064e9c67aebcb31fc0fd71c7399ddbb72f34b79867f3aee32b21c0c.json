{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac\\\\fedproject\\\\my-react-app\\\\src\\\\Shop\\\\ShopDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport \"./ShopDashboard.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopDashboard = () => {\n  _s();\n  const [state, setState] = useState({});\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\n  const [daysArray, setDaysArray] = useState([]);\n  const [timesArray, setTimesArray] = useState([]);\n  const [grounds, setGrounds] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkShopSession = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/shop/checkshopsession', {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          navigate('/shoplogin');\n        } else {\n          const data = await response.json();\n          setState(data.shop);\n          setGrounds(data.shop.grounds || []);\n        }\n      } catch (error) {\n        console.error('Error fetching shop session:', error);\n        alert('An error occurred while fetching shop session.');\n      }\n    };\n    checkShopSession();\n  }, [navigate]);\n  const updatesubmit = async e => {\n    e.preventDefault();\n    const {\n      shopname,\n      address\n    } = e.target.elements;\n    try {\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          shopname: shopname.value,\n          address: address.value\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setState(data.updatedShop);\n        alert('Shop details updated successfully');\n      } else {\n        const error = await response.json();\n        alert(`Update failed: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error updating shop details:', error);\n      alert('An error occurred while updating shop details.');\n    }\n  };\n  const addGround = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n    const availability = daysArray.map((day, index) => ({\n      day,\n      times: [{\n        start: timesArray[index].start,\n        end: timesArray[index].end\n      }]\n    }));\n    formData.append('availability', JSON.stringify(availability));\n    const data = {};\n    formData.forEach((value, key) => data[key] = value);\n    console.log(data);\n    try {\n      const response = await fetch('http://localhost:5000/shop/addground', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Add this line\n        },\n        body: JSON.stringify(data),\n        credentials: 'include' // No 'Content-Type' header here\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert('Ground added successfully!');\n        setGrounds([...grounds, data.newGround]);\n        form.reset();\n        setDaysPerWeek(0);\n        setDaysArray([]);\n        setTimesArray([]);\n      } else {\n        const error = await response.json();\n        alert(`Error adding ground: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error adding ground:', error);\n      alert('An error occurred while adding the ground.');\n    }\n  };\n  const handleDaysPerWeekChange = e => {\n    const value = parseInt(e.target.value);\n    setDaysPerWeek(value);\n    setDaysArray(Array.from({\n      length: value\n    }, () => ''));\n    setTimesArray(Array.from({\n      length: value\n    }, () => ({\n      start: '',\n      end: ''\n    })));\n  };\n  const handleDayChange = (index, newValue) => {\n    const updatedDaysArray = [...daysArray];\n    updatedDaysArray[index] = newValue;\n    setDaysArray(updatedDaysArray);\n  };\n  const handleTimeChange = (index, field, value) => {\n    const updatedTimesArray = [...timesArray];\n    updatedTimesArray[index] = {\n      ...updatedTimesArray[index],\n      [field]: value\n    };\n    setTimesArray(updatedTimesArray);\n  };\n  const generateDayOptions = () => {\n    const allDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const selectedDays = daysArray.filter(day => day !== '');\n    return allDays.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: day,\n      disabled: selectedDays.includes(day),\n      children: day\n    }, day, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sd-shop-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sd-title\",\n      children: \"Shop Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sd-email\",\n      children: [\"Email: \", state.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sd-owner\",\n      children: [\"Owner Name: \", state.owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-update-form\",\n      onSubmit: updatesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"shopname\",\n        children: \"Shop Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"shopname\",\n        id: \"shopname\",\n        placeholder: \"Shop Name\",\n        defaultValue: state.shopname,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"address\",\n        id: \"address\",\n        placeholder: \"Address\",\n        defaultValue: state.address,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Update Shop Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-add-ground-form\",\n      onSubmit: addGround,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundname\",\n        children: \"Ground Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"groundname\",\n        id: \"groundname\",\n        placeholder: \"Ground Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"priceperhour\",\n        children: \"Price Per Hour:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"priceperhour\",\n        id: \"priceperhour\",\n        placeholder: \"Price Per Hour\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"maxplayers\",\n        children: \"Maximum Number of Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"maxplayers\",\n        id: \"maxplayers\",\n        placeholder: \"Maximum Number Of Players\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundLength\",\n        children: \"Ground Length (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundLength\",\n        id: \"groundLength\",\n        placeholder: \"Ground Length (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundwidth\",\n        children: \"Ground Width (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundwidth\",\n        id: \"groundwidth\",\n        placeholder: \"Ground Width (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"facilities\",\n        children: \"Facilities Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"facilities\",\n        id: \"facilities\",\n        placeholder: \"Facilities Available\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"surfaceType\",\n        children: \"Surface Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sd-select\",\n        name: \"surfaceType\",\n        id: \"surfaceType\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Grass\",\n          children: \"Grass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Turf\",\n          children: \"Turf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Clay\",\n          children: \"Clay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Synthetic\",\n          children: \"Synthetic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"daysperweek\",\n        children: \"Days Available Per Week:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"daysperweek\",\n        id: \"daysperweek\",\n        placeholder: \"Days Per Week\",\n        required: true,\n        value: daysPerWeek,\n        onChange: handleDaysPerWeekChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), Array.from({\n        length: daysPerWeek\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sd-day-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sd-label\",\n          htmlFor: `day-${index}`,\n          children: [\"Select Day \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"sd-select\",\n          name: `day-${index}`,\n          id: `day-${index}`,\n          value: daysArray[index],\n          onChange: e => handleDayChange(index, e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), generateDayOptions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sd-label\",\n          htmlFor: `start-time-${index}`,\n          children: \"Start Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"sd-input\",\n          type: \"time\",\n          name: `start-time-${index}`,\n          id: `start-time-${index}`,\n          value: timesArray[index].start,\n          onChange: e => handleTimeChange(index, 'start', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sd-label\",\n          htmlFor: `end-time-${index}`,\n          children: \"End Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"sd-input\",\n          type: \"time\",\n          name: `end-time-${index}`,\n          id: `end-time-${index}`,\n          value: timesArray[index].end,\n          onChange: e => handleTimeChange(index, 'end', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sd-title\",\n      children: \"Existing Grounds:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), grounds.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"sd-ground-list\",\n      children: grounds.map((ground, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"sd-ground-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: ground.groundname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price Per Hour: \", ground.priceperhour]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Players: \", ground.maxplayers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Length: \", ground.groundLength, \" meters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Width: \", ground.groundwidth, \" meters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Surface Type: \", ground.surfaceType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Facilities: \", ground.facilities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", ground.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sd-no-grounds\",\n      children: \"No grounds available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopDashboard, \"+RJg6uchigK6ACqSRDMWTjhZM+Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopDashboard;\nexport default ShopDashboard;\nvar _c;\n$RefreshReg$(_c, \"ShopDashboard\");","map":{"version":3,"names":["useEffect","useState","React","useNavigate","jsxDEV","_jsxDEV","ShopDashboard","_s","state","setState","daysPerWeek","setDaysPerWeek","daysArray","setDaysArray","timesArray","setTimesArray","grounds","setGrounds","navigate","checkShopSession","response","fetch","credentials","ok","data","json","shop","error","console","alert","updatesubmit","e","preventDefault","shopname","address","target","elements","method","headers","body","JSON","stringify","value","updatedShop","msg","addGround","form","formData","FormData","availability","map","day","index","times","start","end","append","forEach","key","log","newGround","reset","handleDaysPerWeekChange","parseInt","Array","from","length","handleDayChange","newValue","updatedDaysArray","handleTimeChange","field","updatedTimesArray","generateDayOptions","allDays","selectedDays","filter","disabled","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","email","owner","onSubmit","htmlFor","type","name","id","placeholder","defaultValue","required","onChange","_","ground","groundname","priceperhour","maxplayers","groundLength","groundwidth","surfaceType","facilities","status","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac/fedproject/my-react-app/src/Shop/ShopDashboard.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport \"./ShopDashboard.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ShopDashboard = () => { \r\n    const [state, setState] = useState({});  \r\n    const [daysPerWeek, setDaysPerWeek] = useState(0);  \r\n    const [daysArray, setDaysArray] = useState([]); \r\n    const [timesArray, setTimesArray] = useState([]); \r\n    const [grounds, setGrounds] = useState([]); \r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkShopSession = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/shop/checkshopsession', {\r\n                    credentials: 'include'\r\n                });\r\n                if (!response.ok) {\r\n                    navigate('/shoplogin');\r\n                } else {\r\n                    const data = await response.json();\r\n                    setState(data.shop);\r\n                    setGrounds(data.shop.grounds || []);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching shop session:', error);\r\n                alert('An error occurred while fetching shop session.');\r\n            }\r\n        };\r\n\r\n        checkShopSession();\r\n    }, [navigate]);\r\n\r\n    const updatesubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { shopname, address } = e.target.elements;\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/shop/updateshop', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    shopname: shopname.value,\r\n                    address: address.value\r\n                }),\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setState(data.updatedShop);\r\n                alert('Shop details updated successfully');\r\n            } else {\r\n                const error = await response.json();\r\n                alert(`Update failed: ${error.msg}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating shop details:', error);\r\n            alert('An error occurred while updating shop details.');\r\n        }\r\n    };\r\n\r\n    const addGround = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const formData = new FormData(form);\r\n        const availability = daysArray.map((day, index) => ({\r\n            day,\r\n            times: [{ start: timesArray[index].start, end: timesArray[index].end }]\r\n        }));\r\n        formData.append('availability', JSON.stringify(availability));\r\n        const data = {};\r\n            formData.forEach((value, key) => (data[key] = value));\r\n        console.log(data)\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:5000/shop/addground', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json' // Add this line\r\n                },\r\n                body:JSON.stringify(data),\r\n                credentials: 'include' // No 'Content-Type' header here\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                alert('Ground added successfully!');\r\n                setGrounds([...grounds, data.newGround]);\r\n                form.reset();\r\n                setDaysPerWeek(0);\r\n                setDaysArray([]);\r\n                setTimesArray([]);\r\n            } else {\r\n                const error = await response.json();\r\n                alert(`Error adding ground: ${error.msg}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding ground:', error);\r\n            alert('An error occurred while adding the ground.');\r\n        }\r\n    };\r\n    \r\n    const handleDaysPerWeekChange = (e) => {\r\n        const value = parseInt(e.target.value);\r\n        setDaysPerWeek(value);\r\n        setDaysArray(Array.from({ length: value }, () => ''));\r\n        setTimesArray(Array.from({ length: value }, () => ({ start: '', end: '' })));\r\n    };\r\n\r\n    const handleDayChange = (index, newValue) => {\r\n        const updatedDaysArray = [...daysArray];\r\n        updatedDaysArray[index] = newValue;\r\n        setDaysArray(updatedDaysArray);\r\n    };\r\n\r\n    const handleTimeChange = (index, field, value) => {\r\n        const updatedTimesArray = [...timesArray];\r\n        updatedTimesArray[index] = { ...updatedTimesArray[index], [field]: value };\r\n        setTimesArray(updatedTimesArray);\r\n    };\r\n\r\n    const generateDayOptions = () => {\r\n        const allDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n        const selectedDays = daysArray.filter(day => day !== '');\r\n        return allDays.map((day) => (\r\n            <option\r\n                key={day}\r\n                value={day}\r\n                disabled={selectedDays.includes(day)}\r\n            >\r\n                {day}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"sd-shop-dashboard\">\r\n            <h1 className=\"sd-title\">Shop Dashboard</h1>\r\n            <h3 className=\"sd-email\">Email: {state.email}</h3>\r\n            <h3 className=\"sd-owner\">Owner Name: {state.owner}</h3>\r\n            \r\n            <form className=\"sd-update-form\" onSubmit={updatesubmit}>\r\n                <label className=\"sd-label\" htmlFor=\"shopname\">Shop Name:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"text\"\r\n                    name=\"shopname\"\r\n                    id=\"shopname\"\r\n                    placeholder=\"Shop Name\"\r\n                    defaultValue={state.shopname}\r\n                    required\r\n                />\r\n                <label className=\"sd-label\" htmlFor=\"address\">Address:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    placeholder=\"Address\"\r\n                    defaultValue={state.address}\r\n                    required\r\n                />\r\n                <button className=\"sd-button\" type=\"submit\">Update Shop Details</button>\r\n            </form>\r\n            \r\n            <form className=\"sd-add-ground-form\" onSubmit={addGround}>\r\n                <label className=\"sd-label\" htmlFor=\"groundname\">Ground Name:</label>\r\n                <input className=\"sd-input\" type=\"text\" name=\"groundname\" id=\"groundname\" placeholder=\"Ground Name\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"priceperhour\">Price Per Hour:</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"priceperhour\" id=\"priceperhour\" placeholder=\"Price Per Hour\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"maxplayers\">Maximum Number of Players:</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"maxplayers\" id=\"maxplayers\" placeholder=\"Maximum Number Of Players\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"groundLength\">Ground Length (meters):</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"groundLength\" id=\"groundLength\" placeholder=\"Ground Length (meters)\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"groundwidth\">Ground Width (meters):</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"groundwidth\" id=\"groundwidth\" placeholder=\"Ground Width (meters)\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"facilities\">Facilities Available:</label>\r\n                <input className=\"sd-input\" type=\"text\" name=\"facilities\" id=\"facilities\" placeholder=\"Facilities Available\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"surfaceType\">Surface Type:</label>\r\n                <select className=\"sd-select\" name=\"surfaceType\" id=\"surfaceType\" required>\r\n                    <option value=\"Grass\">Grass</option>\r\n                    <option value=\"Turf\">Turf</option>\r\n                    <option value=\"Clay\">Clay</option>\r\n                    <option value=\"Hard\">Hard</option>\r\n                    <option value=\"Synthetic\">Synthetic</option>\r\n                </select>\r\n\r\n                <label className=\"sd-label\" htmlFor=\"daysperweek\">Days Available Per Week:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"number\"\r\n                    name=\"daysperweek\"\r\n                    id=\"daysperweek\"\r\n                    placeholder=\"Days Per Week\"\r\n                    required\r\n                    value={daysPerWeek}\r\n                    onChange={handleDaysPerWeekChange}\r\n                />\r\n\r\n                {Array.from({ length: daysPerWeek }).map((_, index) => (\r\n                    <div key={index} className=\"sd-day-container\">\r\n                        <label className=\"sd-label\" htmlFor={`day-${index}`}>Select Day {index + 1}:</label>\r\n                        <select\r\n                            className=\"sd-select\"\r\n                            name={`day-${index}`}\r\n                            id={`day-${index}`}\r\n                            value={daysArray[index]}\r\n                            onChange={(e) => handleDayChange(index, e.target.value)}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Day</option>\r\n                            {generateDayOptions()}\r\n                        </select>\r\n                        <label className=\"sd-label\" htmlFor={`start-time-${index}`}>Start Time:</label>\r\n                        <input\r\n                            className=\"sd-input\"\r\n                            type=\"time\"\r\n                            name={`start-time-${index}`}\r\n                            id={`start-time-${index}`}\r\n                            value={timesArray[index].start}\r\n                            onChange={(e) => handleTimeChange(index, 'start', e.target.value)}\r\n                            required\r\n                        />\r\n                        <label className=\"sd-label\" htmlFor={`end-time-${index}`}>End Time:</label>\r\n                        <input\r\n                            className=\"sd-input\"\r\n                            type=\"time\"\r\n                            name={`end-time-${index}`}\r\n                            id={`end-time-${index}`}\r\n                            value={timesArray[index].end}\r\n                            onChange={(e) => handleTimeChange(index, 'end', e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <button className=\"sd-button\" type=\"submit\">Add Ground</button>\r\n            </form>\r\n            \r\n            <h2 className=\"sd-title\">Existing Grounds:</h2>\r\n            {grounds.length > 0 ? (\r\n                <ul className=\"sd-ground-list\">\r\n                    {grounds.map((ground, index) => (\r\n                        <li key={index} className=\"sd-ground-item\">\r\n                            <h4>{ground.groundname}</h4>\r\n                            <p>Price Per Hour: {ground.priceperhour}</p>\r\n                            <p>Max Players: {ground.maxplayers}</p>\r\n                            <p>Length: {ground.groundLength} meters</p>\r\n                            <p>Width: {ground.groundwidth} meters</p>\r\n                            <p>Surface Type: {ground.surfaceType}</p>\r\n                            <p>Facilities: {ground.facilities}</p>\r\n                            <p>Status: {ground.status}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p className=\"sd-no-grounds\">No grounds available</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShopDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}