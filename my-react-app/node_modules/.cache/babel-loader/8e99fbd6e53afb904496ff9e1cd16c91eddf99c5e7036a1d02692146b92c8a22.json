{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Shop\\\\ShopDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ShopDashboard.css';\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ShopDashboard = () => {\n  _s();\n  const effectRan = useRef(false);\n  const [state, setState] = useState({});\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\n  const [daysArray, setDaysArray] = useState([]);\n  const [timesArray, setTimesArray] = useState([]);\n  const [grounds, setGrounds] = useState([]);\n  const [groundImages, setGroundImages] = useState([]); // Store base64 images\n  const [groundRevenue, setGroundRevenue] = useState([]);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (effectRan.current === false) {\n      const checkShopSession = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/shop/checkshopsession', {\n            credentials: 'include'\n          });\n          if (!response.ok) {\n            navigate('/shoplogin');\n          } else {\n            const data = await response.json();\n            console.log('Shop Data:', data);\n            setState(data.shop);\n            setGrounds(data.shop.availablesports || []);\n            setGroundImages(data.images || []); // Set the base64 images\n          }\n          const revenueresponse = await fetch('http://localhost:5000/shop/checkrevenue', {\n            method: 'GET',\n            credentials: 'include'\n          });\n          if (revenueresponse.ok) {\n            const data = await response.json();\n            console.log(data);\n            setTotalRevenue(data.totalRevenue);\n            setGroundRevenue(data.groundRevenues);\n          } else {\n            throw new Error(\"Expected JSON, but received: \");\n          }\n        } catch (error) {\n          console.error('Error fetching shop session:', error);\n          alert('An error occurred while fetching shop session.');\n        }\n      };\n      checkShopSession();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = true; // Cleanup\n    };\n  }, [navigate]);\n  const updatesubmit = async e => {\n    e.preventDefault();\n    const {\n      shopname,\n      address\n    } = e.target.elements;\n    try {\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          shopname: shopname.value,\n          address: address.value\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setState(data.updatedShop);\n        alert('Shop details updated successfully');\n        window.location.reload();\n      } else {\n        const error = await response.json();\n        alert(`Update failed: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error updating shop details:', error);\n      alert('An error occurred while updating shop details.');\n    }\n  };\n  const handleDaysPerWeekChange = e => {\n    let value = parseInt(e.target.value, 10);\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n    if (value > 7) {\n      value = 7;\n    }\n    setDaysPerWeek(value);\n    setDaysArray(Array(value).fill(''));\n    setTimesArray(Array(value).fill({\n      start: '',\n      end: ''\n    }));\n  };\n  const handleDayChange = (index, value) => {\n    const updatedDays = [...daysArray];\n    updatedDays[index] = value;\n    setDaysArray(updatedDays);\n  };\n  const handleTimeChange = (index, type, value) => {\n    const updatedTimes = [...timesArray];\n    updatedTimes[index] = {\n      ...updatedTimes[index],\n      [type]: value\n    };\n    setTimesArray(updatedTimes);\n  };\n  const generateDayOptions = () => {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    return days.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: day,\n      children: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this));\n  };\n  const addGround = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form); // Use FormData to handle file upload\n\n    const availability = daysArray.map((day, index) => ({\n      day,\n      times: [{\n        start: timesArray[index].start,\n        end: timesArray[index].end\n      }]\n    }));\n    formData.append('availability', JSON.stringify(availability));\n    try {\n      const response = await fetch('http://localhost:5000/shop/addground', {\n        method: 'POST',\n        body: formData,\n        // Send FormData directly\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const updatedData = await response.json();\n        console.log('Updated Grounds Data:', updatedData);\n        setGrounds(updatedData.shop.availablesports);\n        setGroundImages(updatedData.images || []); // Update base64 images\n        alert('Ground added successfully!');\n        navigate('/shopdashboard');\n        form.reset();\n        setDaysPerWeek(0);\n        setDaysArray([]);\n        setTimesArray([]);\n      } else {\n        const error = await response.json();\n        alert(`Error adding ground: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error adding ground:', error);\n      alert('An error occurred while adding the ground.');\n    }\n  };\n  const applyingforverification = async groundname => {\n    try {\n      const response = await fetch('http://localhost:5000/shop/applyforverification', {\n        method: 'POST',\n        body: JSON.stringify({\n          groundname\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (response.ok) {\n        alert('Applied Successfully');\n\n        // Fetch updated data from the server\n        const updatedResponse = await fetch('http://localhost:5000/shop/checkshopsession', {\n          credentials: 'include'\n        });\n        if (updatedResponse.ok) {\n          const updatedData = await updatedResponse.json();\n          setState(updatedData.shop); // Update shop state\n          setGrounds(updatedData.shop.availablesports || []); // Update the grounds list\n          setGroundImages(updatedData.images || []); // Update ground images if necessary\n        }\n      } else {\n        const error = await response.json();\n        alert(`Failed to apply for verification: ${error.msg}`);\n      }\n    } catch (err) {\n      console.log(err);\n      alert('An error occurred while applying for verification.');\n    }\n  };\n  const chartData = {\n    labels: groundRevenue.map(sport => sport.groundName),\n    datasets: [{\n      label: 'Ground Revenue',\n      data: groundRevenue.map(sport => sport.groundFee),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sd-shop-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sd-title\",\n      children: \"Shop Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shophigh\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sd-email\",\n        children: [\"Email: \", state.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sd-owner\",\n        children: [\"Owner Name: \", state.owner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-update-form\",\n      onSubmit: updatesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"shopname\",\n        children: \"Shop Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"shopname\",\n        id: \"shopname\",\n        placeholder: \"Shop Name\",\n        defaultValue: state.shopname,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"address\",\n        id: \"address\",\n        placeholder: \"Address\",\n        defaultValue: state.address,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Update Shop Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-add-ground-form\",\n      onSubmit: addGround,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sd-subtitle\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundname\",\n        children: \"Ground Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"groundname\",\n        id: \"groundname\",\n        placeholder: \"Ground Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"priceperhour\",\n        children: \"Price Per Hour:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"priceperhour\",\n        id: \"priceperhour\",\n        placeholder: \"Price Per Hour\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"maxplayers\",\n        children: \"Maximum Number of Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"maxplayers\",\n        id: \"maxplayers\",\n        placeholder: \"Maximum Number Of Players\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundLength\",\n        children: \"Ground Length (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundLength\",\n        id: \"groundLength\",\n        placeholder: \"Ground Length (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundwidth\",\n        children: \"Ground Width (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundwidth\",\n        id: \"groundwidth\",\n        placeholder: \"Ground Width (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"facilities\",\n        children: \"Facilities Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"facilities\",\n        id: \"facilities\",\n        placeholder: \"Facilities Available\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"surfaceType\",\n        children: \"Surface Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sd-select\",\n        name: \"surfaceType\",\n        id: \"surfaceType\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Grass\",\n          children: \"Grass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Turf\",\n          children: \"Turf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Clay\",\n          children: \"Clay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Synthetic\",\n          children: \"Synthetic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"image\",\n        children: \"Upload Ground Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"file\",\n        name: \"image\",\n        id: \"image\",\n        accept: \"image/*\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"daysperweek\",\n        children: \"Days Available Per Week:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"daysperweek\",\n        id: \"daysperweek\",\n        placeholder: \"Days Per Week\",\n        required: true,\n        value: daysPerWeek,\n        onChange: handleDaysPerWeekChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), Array.from({\n        length: daysPerWeek\n      }).map((_, index) => {\n        var _timesArray$index, _timesArray$index2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sd-day-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `day-${index}`,\n            children: \"Day:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sd-select\",\n            name: `day-${index}`,\n            id: `day-${index}`,\n            value: daysArray[index] || '',\n            onChange: e => handleDayChange(index, e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), generateDayOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `start-time-${index}`,\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `start-time-${index}`,\n            id: `start-time-${index}`,\n            value: ((_timesArray$index = timesArray[index]) === null || _timesArray$index === void 0 ? void 0 : _timesArray$index.start) || '',\n            onChange: e => handleTimeChange(index, 'start', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `end-time-${index}`,\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `end-time-${index}`,\n            id: `end-time-${index}`,\n            value: ((_timesArray$index2 = timesArray[index]) === null || _timesArray$index2 === void 0 ? void 0 : _timesArray$index2.end) || '',\n            onChange: e => handleTimeChange(index, 'end', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rc-pie-chart\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"sd-grounds-list\",\n      children: grounds.map((ground, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"sd-ground-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ground.groundname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price Per Hour: \", ground.priceperhour]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Players: \", ground.maxplayers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ground Dimensions: \", ground.grounddimensions.length, \" x \", ground.grounddimensions.width, \" meters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Facilities: \", ground.facilities.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Surface Type: \", ground.surfacetype]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ground.getimage || ground.image || 'default-image-path.jpg' // Fallback to default image if not available\n          ,\n          alt: ground.groundname,\n          className: \"sd-ground-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", ground.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Verification: \", ground.verify ? 'Verified' : 'Not Verified']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Appled For Verification: \", ground.appliedforverification ? 'Applied' : 'Not Applied']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), !ground.verify && !ground.appliedforverification && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => applyingforverification(ground.groundname),\n          children: \"Apply for Verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopDashboard, \"D/iZ9nZ7/qHpMJHr+xw+t4tSm0A=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopDashboard;\nexport default ShopDashboard;\nvar _c;\n$RefreshReg$(_c, \"ShopDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","ShopDashboard","_s","effectRan","state","setState","daysPerWeek","setDaysPerWeek","daysArray","setDaysArray","timesArray","setTimesArray","grounds","setGrounds","groundImages","setGroundImages","groundRevenue","setGroundRevenue","totalRevenue","setTotalRevenue","navigate","current","checkShopSession","response","fetch","credentials","ok","data","json","console","log","shop","availablesports","images","revenueresponse","method","groundRevenues","Error","error","alert","updatesubmit","e","preventDefault","shopname","address","target","elements","headers","body","JSON","stringify","value","updatedShop","window","location","reload","msg","handleDaysPerWeekChange","parseInt","isNaN","Array","fill","start","end","handleDayChange","index","updatedDays","handleTimeChange","type","updatedTimes","generateDayOptions","days","map","day","children","fileName","_jsxFileName","lineNumber","columnNumber","addGround","form","formData","FormData","availability","times","append","updatedData","reset","applyingforverification","groundname","updatedResponse","err","chartData","labels","sport","groundName","datasets","label","groundFee","backgroundColor","className","email","owner","onSubmit","htmlFor","name","id","placeholder","defaultValue","required","accept","onChange","from","length","_","_timesArray$index","_timesArray$index2","disabled","ground","priceperhour","maxplayers","grounddimensions","width","facilities","join","surfacetype","src","getimage","image","alt","status","verify","appliedforverification","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Shop/ShopDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ShopDashboard.css';\r\nimport { Pie } from \"react-chartjs-2\"; \r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'; \r\nimport { useNavigate } from 'react-router-dom';\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ShopDashboard = () => {\r\n  const effectRan = useRef(false);\r\n  const [state, setState] = useState({});\r\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\r\n  const [daysArray, setDaysArray] = useState([]);\r\n  const [timesArray, setTimesArray] = useState([]);\r\n  const [grounds, setGrounds] = useState([]);\r\n  const [groundImages, setGroundImages] = useState([]); // Store base64 images\r\n  const [groundRevenue, setGroundRevenue] = useState([]);\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (effectRan.current === false) {\r\n      const checkShopSession = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/shop/checkshopsession', {\r\n            credentials: 'include'\r\n          });\r\n          if (!response.ok) {\r\n            navigate('/shoplogin');\r\n          } else {\r\n            const data = await response.json();\r\n            console.log('Shop Data:', data);\r\n            setState(data.shop);\r\n            setGrounds(data.shop.availablesports || []);\r\n            setGroundImages(data.images || []); // Set the base64 images\r\n          }\r\n          const revenueresponse = await fetch('http://localhost:5000/shop/checkrevenue', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        });\r\n        if (revenueresponse.ok) {\r\n          const data = await response.json();\r\n          console.log(data); \r\n          setTotalRevenue(data.totalRevenue);\r\n          setGroundRevenue(data.groundRevenues);\r\n      } else {\r\n          throw new Error(\"Expected JSON, but received: \");\r\n      }\r\n        } catch (error) {\r\n          console.error('Error fetching shop session:', error);\r\n          alert('An error occurred while fetching shop session.');\r\n        }\r\n      };\r\n\r\n      checkShopSession();\r\n      effectRan.current = true;\r\n    }\r\n    return () => {\r\n      effectRan.current = true; // Cleanup\r\n    };\r\n  }, [navigate]);\r\n\r\n  const updatesubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { shopname, address } = e.target.elements;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          shopname: shopname.value,\r\n          address: address.value\r\n        }),\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setState(data.updatedShop);\r\n        alert('Shop details updated successfully');\r\n        window.location.reload();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Update failed: ${error.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating shop details:', error);\r\n      alert('An error occurred while updating shop details.');\r\n    }\r\n  };\r\n\r\n  const handleDaysPerWeekChange = (e) => {\r\n    let value = parseInt(e.target.value, 10);\r\n\r\n    if (isNaN(value) || value < 0) {\r\n      value = 0;\r\n    }\r\n\r\n    if (value > 7) {\r\n      value = 7;\r\n    }\r\n\r\n    setDaysPerWeek(value);\r\n    setDaysArray(Array(value).fill(''));\r\n    setTimesArray(Array(value).fill({ start: '', end: '' }));\r\n  };\r\n\r\n  const handleDayChange = (index, value) => {\r\n    const updatedDays = [...daysArray];\r\n    updatedDays[index] = value;\r\n    setDaysArray(updatedDays);\r\n  };\r\n\r\n  const handleTimeChange = (index, type, value) => {\r\n    const updatedTimes = [...timesArray];\r\n    updatedTimes[index] = { ...updatedTimes[index], [type]: value };\r\n    setTimesArray(updatedTimes);\r\n  };\r\n\r\n  const generateDayOptions = () => {\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    return days.map((day, index) => (\r\n      <option key={index} value={day}>\r\n        {day}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const addGround = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const formData = new FormData(form); // Use FormData to handle file upload\r\n\r\n    const availability = daysArray.map((day, index) => ({\r\n      day,\r\n      times: [{ start: timesArray[index].start, end: timesArray[index].end }]\r\n    }));\r\n    formData.append('availability', JSON.stringify(availability));\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/addground', {\r\n        method: 'POST',\r\n        body: formData, // Send FormData directly\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedData = await response.json();\r\n        console.log('Updated Grounds Data:', updatedData);\r\n        setGrounds(updatedData.shop.availablesports);\r\n        setGroundImages(updatedData.images || []); // Update base64 images\r\n        alert('Ground added successfully!');\r\n        navigate('/shopdashboard');\r\n        \r\n        form.reset();\r\n        setDaysPerWeek(0);\r\n        setDaysArray([]);\r\n        setTimesArray([]);\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error adding ground: ${error.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding ground:', error);\r\n      alert('An error occurred while adding the ground.');\r\n    }\r\n  };\r\n  const applyingforverification = async (groundname) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/applyforverification', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ groundname }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        alert('Applied Successfully');\r\n  \r\n        // Fetch updated data from the server\r\n        const updatedResponse = await fetch('http://localhost:5000/shop/checkshopsession', {\r\n          credentials: 'include'\r\n        });\r\n  \r\n        if (updatedResponse.ok) {\r\n          const updatedData = await updatedResponse.json();\r\n          setState(updatedData.shop); // Update shop state\r\n          setGrounds(updatedData.shop.availablesports || []); // Update the grounds list\r\n          setGroundImages(updatedData.images || []); // Update ground images if necessary\r\n        }\r\n  \r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Failed to apply for verification: ${error.msg}`);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert('An error occurred while applying for verification.');\r\n    }\r\n  };\r\n  const chartData = {\r\n    labels: groundRevenue.map((sport) => sport.groundName),\r\n    datasets: [{\r\n        label: 'Ground Revenue',\r\n        data: groundRevenue.map((sport) => sport.groundFee),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n    }],\r\n};\r\n  \r\n\r\n  return (\r\n    <div className=\"sd-shop-dashboard\">\r\n      <h1 className=\"sd-title\">Shop Dashboard</h1>\r\n      <div className='shophigh'>\r\n      <h3 className=\"sd-email\">Email: {state.email}</h3>\r\n      <h3 className=\"sd-owner\">Owner Name: {state.owner}</h3>\r\n      </div>\r\n\r\n      <form className=\"sd-update-form\" onSubmit={updatesubmit}>\r\n        <label className=\"sd-label\" htmlFor=\"shopname\">Shop Name:</label>\r\n        <input\r\n          className=\"sd-input\"\r\n          type=\"text\"\r\n          name=\"shopname\"\r\n          id=\"shopname\"\r\n          placeholder=\"Shop Name\"\r\n          defaultValue={state.shopname}\r\n          required\r\n        />\r\n        <label className=\"sd-label\" htmlFor=\"address\">Address:</label>\r\n        <input\r\n          className=\"sd-input\"\r\n          type=\"text\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          placeholder=\"Address\"\r\n          defaultValue={state.address}\r\n          required\r\n        />\r\n        <button className=\"sd-button\" type=\"submit\">Update Shop Details</button>\r\n      </form>\r\n\r\n      <form className=\"sd-add-ground-form\" onSubmit={addGround}>\r\n        <h2 className=\"sd-subtitle\">Add Ground</h2>\r\n        <label className=\"sd-label\" htmlFor=\"groundname\">Ground Name:</label>\r\n        <input className=\"sd-input\" type=\"text\" name=\"groundname\" id=\"groundname\" placeholder=\"Ground Name\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"priceperhour\">Price Per Hour:</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"priceperhour\" id=\"priceperhour\" placeholder=\"Price Per Hour\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"maxplayers\">Maximum Number of Players:</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"maxplayers\" id=\"maxplayers\" placeholder=\"Maximum Number Of Players\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"groundLength\">Ground Length (meters):</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"groundLength\" id=\"groundLength\" placeholder=\"Ground Length (meters)\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"groundwidth\">Ground Width (meters):</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"groundwidth\" id=\"groundwidth\" placeholder=\"Ground Width (meters)\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"facilities\">Facilities Available:</label>\r\n        <input className=\"sd-input\" type=\"text\" name=\"facilities\" id=\"facilities\" placeholder=\"Facilities Available\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"surfaceType\">Surface Type:</label>\r\n        <select className=\"sd-select\" name=\"surfaceType\" id=\"surfaceType\" required>\r\n          <option value=\"Grass\">Grass</option>\r\n          <option value=\"Turf\">Turf</option>\r\n          <option value=\"Clay\">Clay</option>\r\n          <option value=\"Hard\">Hard</option>\r\n          <option value=\"Synthetic\">Synthetic</option>\r\n        </select>\r\n\r\n        <label className=\"sd-label\" htmlFor=\"image\">Upload Ground Image:</label>\r\n        <input className=\"sd-input\" type=\"file\" name=\"image\" id=\"image\" accept=\"image/*\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"daysperweek\">Days Available Per Week:</label>\r\n        <input\r\n          className=\"sd-input\"\r\n          type=\"number\"\r\n          name=\"daysperweek\"\r\n          id=\"daysperweek\"\r\n          placeholder=\"Days Per Week\"\r\n          required\r\n          value={daysPerWeek}\r\n          onChange={handleDaysPerWeekChange}\r\n        />\r\n\r\n        {Array.from({ length: daysPerWeek }).map((_, index) => (\r\n          <div key={index} className=\"sd-day-container\">\r\n            <label className=\"sd-label\" htmlFor={`day-${index}`}>Day:</label>\r\n            <select\r\n              className=\"sd-select\"\r\n              name={`day-${index}`}\r\n              id={`day-${index}`}\r\n              value={daysArray[index] || ''}\r\n              onChange={(e) => handleDayChange(index, e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>Select Day</option>\r\n              {generateDayOptions()}\r\n            </select>\r\n            <label className=\"sd-label\" htmlFor={`start-time-${index}`}>Start Time:</label>\r\n            <input\r\n              className=\"sd-input\"\r\n              type=\"time\"\r\n              name={`start-time-${index}`}\r\n              id={`start-time-${index}`}\r\n              value={timesArray[index]?.start || ''}\r\n              onChange={(e) => handleTimeChange(index, 'start', e.target.value)}\r\n              required\r\n            />\r\n            <label className=\"sd-label\" htmlFor={`end-time-${index}`}>End Time:</label>\r\n            <input\r\n              className=\"sd-input\"\r\n              type=\"time\"\r\n              name={`end-time-${index}`}\r\n              id={`end-time-${index}`}\r\n              value={timesArray[index]?.end || ''}\r\n              onChange={(e) => handleTimeChange(index, 'end', e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <button className=\"sd-button\" type=\"submit\">Add Ground</button>\r\n      </form>\r\n      <div className=\"rc-pie-chart\">\r\n                <Pie data={chartData} />\r\n            </div>\r\n\r\n      <ul className=\"sd-grounds-list\">\r\n        {grounds.map((ground, index) => (\r\n          <li key={index} className=\"sd-ground-item\">\r\n            <h3>{ground.groundname}</h3>\r\n            <p>Price Per Hour: {ground.priceperhour}</p>\r\n            <p>Max Players: {ground.maxplayers}</p>\r\n            <p>Ground Dimensions: {ground.grounddimensions.length} x {ground.grounddimensions.width} meters</p>\r\n            <p>Facilities: {ground.facilities.join(', ')}</p>\r\n            <p>Surface Type: {ground.surfacetype}</p>\r\n            <img\r\n              src={ground.getimage || ground.image||'default-image-path.jpg'} // Fallback to default image if not available\r\n              alt={ground.groundname}\r\n              className=\"sd-ground-image\"\r\n            />\r\n            <p>Status: {ground.status}</p>\r\n            <p>Verification: {ground.verify ? 'Verified' : 'Not Verified'}</p>\r\n            <p>Appled For Verification: {ground.appliedforverification ? 'Applied' : 'Not Applied'}</p>\r\n            {!ground.verify && !ground.appliedforverification &&(\r\n        <button onClick={() => applyingforverification(ground.groundname)}>Apply for Verification</button>\r\n      )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}