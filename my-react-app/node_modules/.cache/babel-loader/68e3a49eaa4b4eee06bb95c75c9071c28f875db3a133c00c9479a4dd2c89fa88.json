{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhaskar\\\\Desktop\\\\GITPRAC\\\\fedproject\\\\my-react-app\\\\src\\\\Shop\\\\ShopDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ShopDashboard.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopDashboard = () => {\n  _s();\n  const effectRan = useRef(false);\n  const [state, setState] = useState({});\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\n  const [daysArray, setDaysArray] = useState([]);\n  const [timesArray, setTimesArray] = useState([]);\n  const [grounds, setGrounds] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (effectRan.current === false) {\n      const checkShopSession = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/shop/checkshopsession', {\n            credentials: 'include'\n          });\n          if (!response.ok) {\n            navigate('/shoplogin');\n          } else {\n            const data = await response.json();\n            console.log('Shop Data:', data);\n            setState(data.shop);\n            setGrounds(data.shop.grounds || []);\n          }\n        } catch (error) {\n          console.error('Error fetching shop session:', error);\n          alert('An error occurred while fetching shop session.');\n        }\n      };\n      checkShopSession();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = true; // Cleanup\n    };\n  }, [navigate]);\n  const updatesubmit = async e => {\n    e.preventDefault();\n    const {\n      shopname,\n      address\n    } = e.target.elements;\n    try {\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          shopname: shopname.value,\n          address: address.value\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setState(data.updatedShop);\n        alert('Shop details updated successfully');\n      } else {\n        const error = await response.json();\n        alert('Update failed: ${error.msg}');\n      }\n    } catch (error) {\n      console.error('Error updating shop details:', error);\n      alert('An error occurred while updating shop details.');\n    }\n  };\n\n  // Handle change for the days per week input\n  // Handle change for the days per week input\n  const handleDaysPerWeekChange = e => {\n    const value = parseInt(e.target.value, 10);\n\n    // Ensure value is a positive number or 0 and is a valid number\n    if (!isNaN(value) && value >= 0) {\n      setDaysPerWeek(value);\n      setDaysArray(Array(value).fill(''));\n      setTimesArray(Array(value).fill({\n        start: '',\n        end: ''\n      }));\n    } else {\n      setDaysPerWeek(0);\n      setDaysArray([]);\n      setTimesArray([]);\n    }\n  };\n\n  // Handle change for each day selection\n  const handleDayChange = (index, value) => {\n    const updatedDays = [...daysArray];\n    updatedDays[index] = value;\n    setDaysArray(updatedDays);\n  };\n\n  // Handle change for each time selection\n  const handleTimeChange = (index, type, value) => {\n    const updatedTimes = [...timesArray];\n    updatedTimes[index] = {\n      ...updatedTimes[index],\n      [type]: value\n    };\n    setTimesArray(updatedTimes);\n  };\n\n  // Generate day options\n  const generateDayOptions = () => {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    return days.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: day,\n      children: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Add ground function with image upload\n  const addGround = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form); // Use FormData to handle file upload\n\n    const availability = daysArray.map((day, index) => ({\n      day,\n      times: [{\n        start: timesArray[index].start,\n        end: timesArray[index].end\n      }]\n    }));\n    formData.append('availability', JSON.stringify(availability));\n    try {\n      const response = await fetch('http://localhost:5000/shop/addground', {\n        method: 'POST',\n        body: formData,\n        // Send FormData directly\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const updatedData = await response.json();\n        console.log('Updated Grounds Data:', updatedData);\n        setGrounds(updatedData.shop.grounds);\n        alert('Ground added successfully!');\n        form.reset();\n        setDaysPerWeek(0);\n        setDaysArray([]);\n        setTimesArray([]);\n      } else {\n        const error = await response.json();\n        alert(`Error adding ground: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error adding ground:', error);\n      alert('An error occurred while adding the ground.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sd-shop-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sd-title\",\n      children: \"Shop Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sd-email\",\n      children: [\"Email: \", state.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sd-owner\",\n      children: [\"Owner Name: \", state.owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-update-form\",\n      onSubmit: updatesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"shopname\",\n        children: \"Shop Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"shopname\",\n        id: \"shopname\",\n        placeholder: \"Shop Name\",\n        defaultValue: state.shopname,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"address\",\n        id: \"address\",\n        placeholder: \"Address\",\n        defaultValue: state.address,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Update Shop Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sd-title\",\n      children: \"Shop Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-add-ground-form\",\n      onSubmit: addGround,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundname\",\n        children: \"Ground Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"groundname\",\n        id: \"groundname\",\n        placeholder: \"Ground Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"priceperhour\",\n        children: \"Price Per Hour:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"priceperhour\",\n        id: \"priceperhour\",\n        placeholder: \"Price Per Hour\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"maxplayers\",\n        children: \"Maximum Number of Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"maxplayers\",\n        id: \"maxplayers\",\n        placeholder: \"Maximum Number Of Players\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundLength\",\n        children: \"Ground Length (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundLength\",\n        id: \"groundLength\",\n        placeholder: \"Ground Length (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundwidth\",\n        children: \"Ground Width (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundwidth\",\n        id: \"groundwidth\",\n        placeholder: \"Ground Width (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"facilities\",\n        children: \"Facilities Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"facilities\",\n        id: \"facilities\",\n        placeholder: \"Facilities Available\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"surfaceType\",\n        children: \"Surface Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sd-select\",\n        name: \"surfaceType\",\n        id: \"surfaceType\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Grass\",\n          children: \"Grass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Turf\",\n          children: \"Turf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Clay\",\n          children: \"Clay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Synthetic\",\n          children: \"Synthetic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"image\",\n        children: \"Upload Ground Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"file\",\n        name: \"image\",\n        id: \"image\",\n        accept: \"image/*\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"daysperweek\",\n        children: \"Days Available Per Week:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"daysperweek\",\n        id: \"daysperweek\",\n        placeholder: \"Days Per Week\",\n        required: true,\n        value: daysPerWeek,\n        onChange: handleDaysPerWeekChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }, this), Array.from({\n        length: daysPerWeek\n      }).map((_, index) => {\n        var _timesArray$index, _timesArray$index2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sd-day-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `day-${index}`,\n            children: \"Day:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sd-select\",\n            name: `day-${index}`,\n            id: `day-${index}`,\n            value: daysArray[index] || '',\n            onChange: e => handleDayChange(index, e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), generateDayOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `start-time-${index}`,\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `start-time-${index}`,\n            id: `start-time-${index}`,\n            value: ((_timesArray$index = timesArray[index]) === null || _timesArray$index === void 0 ? void 0 : _timesArray$index.start) || '',\n            onChange: e => handleTimeChange(index, 'start', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `end-time-${index}`,\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `end-time-${index}`,\n            id: `end-time-${index}`,\n            value: ((_timesArray$index2 = timesArray[index]) === null || _timesArray$index2 === void 0 ? void 0 : _timesArray$index2.end) || '',\n            onChange: e => handleTimeChange(index, 'end', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sd-grounds-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sd-subtitle\",\n        children: \"Available Grounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), grounds.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"sd-ground-list\",\n        children: grounds.map((ground, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"sd-ground-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: ground.groundname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price Per Hour: \", ground.priceperhour]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Players: \", ground.maxplayers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ground Dimensions: \", ground.grounddimensions.length, \" x \", ground.grounddimensions.width, \" meters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Facilities: \", ground.facilities.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Surface Type: \", ground.surfacetype]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ground.image,\n            alt: ground.groundname,\n            className: \"sd-ground-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", ground.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Verification: \", ground.verify ? 'Verified' : 'Not Verified']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No grounds available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopDashboard, \"YotJW7/LZbTTuVJarqNw9COp/Dc=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopDashboard;\nexport default ShopDashboard;\nvar _c;\n$RefreshReg$(_c, \"ShopDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","ShopDashboard","_s","effectRan","state","setState","daysPerWeek","setDaysPerWeek","daysArray","setDaysArray","timesArray","setTimesArray","grounds","setGrounds","navigate","current","checkShopSession","response","fetch","credentials","ok","data","json","console","log","shop","error","alert","updatesubmit","e","preventDefault","shopname","address","target","elements","method","headers","body","JSON","stringify","value","updatedShop","handleDaysPerWeekChange","parseInt","isNaN","Array","fill","start","end","handleDayChange","index","updatedDays","handleTimeChange","type","updatedTimes","generateDayOptions","days","map","day","children","fileName","_jsxFileName","lineNumber","columnNumber","addGround","form","formData","FormData","availability","times","append","updatedData","reset","msg","className","email","owner","onSubmit","htmlFor","name","id","placeholder","defaultValue","required","accept","onChange","from","length","_","_timesArray$index","_timesArray$index2","disabled","ground","groundname","priceperhour","maxplayers","grounddimensions","width","facilities","join","surfacetype","src","image","alt","status","verify","_c","$RefreshReg$"],"sources":["C:/Users/Bhaskar/Desktop/GITPRAC/fedproject/my-react-app/src/Shop/ShopDashboard.jsx"],"sourcesContent":["import React, { useState,useEffect,useRef } from 'react';\r\nimport './ShopDashboard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ShopDashboard = () => {\r\n    const effectRan = useRef(false);\r\n    const [state, setState] = useState({});   \r\n    const [daysPerWeek, setDaysPerWeek] = useState(0);   \r\n    const [daysArray, setDaysArray] = useState([]);  \r\n    const [timesArray, setTimesArray] = useState([]); \r\n    const [grounds, setGrounds] = useState([]); \r\n    const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (effectRan.current === false){\r\n    const checkShopSession = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/shop/checkshopsession', {\r\n                credentials: 'include'\r\n            });\r\n            if (!response.ok) {\r\n                navigate('/shoplogin');\r\n            } else {\r\n                const data = await response.json();\r\n                console.log('Shop Data:', data);\r\n                setState(data.shop);\r\n                setGrounds(data.shop.grounds || []);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching shop session:', error);\r\n            alert('An error occurred while fetching shop session.');\r\n        }\r\n    };\r\n\r\n    checkShopSession();\r\n    effectRan.current = true;\r\n  }return () => {\r\n    effectRan.current = true; // Cleanup\r\n  };\r\n}, [navigate]);\r\nconst updatesubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { shopname, address } = e.target.elements;\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:5000/shop/updateshop', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                shopname: shopname.value,\r\n                address: address.value\r\n            }),\r\n            credentials: 'include'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            setState(data.updatedShop);\r\n            alert('Shop details updated successfully');\r\n        } else {\r\n            const error = await response.json();\r\n            alert('Update failed: ${error.msg}');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error updating shop details:', error);\r\n        alert('An error occurred while updating shop details.');\r\n    }\r\n};\r\n\r\n\r\n  // Handle change for the days per week input\r\n// Handle change for the days per week input\r\nconst handleDaysPerWeekChange = (e) => {\r\n  const value = parseInt(e.target.value, 10);\r\n\r\n  // Ensure value is a positive number or 0 and is a valid number\r\n  if (!isNaN(value) && value >= 0) {\r\n      setDaysPerWeek(value);\r\n      setDaysArray(Array(value).fill(''));\r\n      setTimesArray(Array(value).fill({ start: '', end: '' }));\r\n  } else {\r\n      setDaysPerWeek(0);\r\n      setDaysArray([]);\r\n      setTimesArray([]);\r\n  }\r\n};\r\n\r\n  // Handle change for each day selection\r\n  const handleDayChange = (index, value) => {\r\n    const updatedDays = [...daysArray];\r\n    updatedDays[index] = value;\r\n    setDaysArray(updatedDays);\r\n  };\r\n\r\n  // Handle change for each time selection\r\n  const handleTimeChange = (index, type, value) => {\r\n    const updatedTimes = [...timesArray];\r\n    updatedTimes[index] = { ...updatedTimes[index], [type]: value };\r\n    setTimesArray(updatedTimes);\r\n  };\r\n\r\n  // Generate day options\r\n  const generateDayOptions = () => {\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    return days.map((day, index) => (\r\n      <option key={index} value={day}>\r\n        {day}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  // Add ground function with image upload\r\n  const addGround = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const formData = new FormData(form); // Use FormData to handle file upload\r\n\r\n    const availability = daysArray.map((day, index) => ({\r\n        day,\r\n        times: [{ start: timesArray[index].start, end: timesArray[index].end }]\r\n    }));\r\n    formData.append('availability', JSON.stringify(availability));\r\n\r\n    try {\r\n        \r\n        const response = await fetch('http://localhost:5000/shop/addground', {\r\n            method: 'POST',\r\n            body: formData, // Send FormData directly\r\n            credentials: 'include'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const updatedData = await response.json();\r\n            console.log('Updated Grounds Data:', updatedData);\r\n            setGrounds(updatedData.shop.grounds);\r\n            alert('Ground added successfully!');\r\n            form.reset();\r\n            setDaysPerWeek(0);\r\n            setDaysArray([]);\r\n            setTimesArray([]);\r\n        } else {\r\n            const error = await response.json();\r\n            alert(`Error adding ground: ${error.msg}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error adding ground:', error);\r\n        alert('An error occurred while adding the ground.');\r\n    }\r\n};\r\n\r\n\r\n  return (\r\n\r\n        <div className=\"sd-shop-dashboard\">\r\n            <h1 className=\"sd-title\">Shop Dashboard</h1>\r\n            <h3 className=\"sd-email\">Email: {state.email}</h3>\r\n            <h3 className=\"sd-owner\">Owner Name: {state.owner}</h3>\r\n            \r\n            <form className=\"sd-update-form\" onSubmit={updatesubmit}>\r\n                <label className=\"sd-label\" htmlFor=\"shopname\">Shop Name:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"text\"\r\n                    name=\"shopname\"\r\n                    id=\"shopname\"\r\n                    placeholder=\"Shop Name\"\r\n                    defaultValue={state.shopname}\r\n                    required\r\n                />\r\n                <label className=\"sd-label\" htmlFor=\"address\">Address:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    placeholder=\"Address\"\r\n                    defaultValue={state.address}\r\n                    required\r\n                />\r\n                <button className=\"sd-button\" type=\"submit\">Update Shop Details</button>\r\n            </form>\r\n            \r\n      <h1 className=\"sd-title\">Shop Dashboard</h1>\r\n      <form className=\"sd-add-ground-form\" onSubmit={addGround}>\r\n    <label className=\"sd-label\" htmlFor=\"groundname\">Ground Name:</label>\r\n    <input className=\"sd-input\" type=\"text\" name=\"groundname\" id=\"groundname\" placeholder=\"Ground Name\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"priceperhour\">Price Per Hour:</label>\r\n    <input className=\"sd-input\" type=\"number\" name=\"priceperhour\" id=\"priceperhour\" placeholder=\"Price Per Hour\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"maxplayers\">Maximum Number of Players:</label>\r\n    <input className=\"sd-input\" type=\"number\" name=\"maxplayers\" id=\"maxplayers\" placeholder=\"Maximum Number Of Players\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"groundLength\">Ground Length (meters):</label>\r\n    <input className=\"sd-input\" type=\"number\" name=\"groundLength\" id=\"groundLength\" placeholder=\"Ground Length (meters)\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"groundwidth\">Ground Width (meters):</label>\r\n    <input className=\"sd-input\" type=\"number\" name=\"groundwidth\" id=\"groundwidth\" placeholder=\"Ground Width (meters)\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"facilities\">Facilities Available:</label>\r\n    <input className=\"sd-input\" type=\"text\" name=\"facilities\" id=\"facilities\" placeholder=\"Facilities Available\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"surfaceType\">Surface Type:</label>\r\n    <select className=\"sd-select\" name=\"surfaceType\" id=\"surfaceType\" required>\r\n        <option value=\"Grass\">Grass</option>\r\n        <option value=\"Turf\">Turf</option>\r\n        <option value=\"Clay\">Clay</option>\r\n        <option value=\"Hard\">Hard</option>\r\n        <option value=\"Synthetic\">Synthetic</option>\r\n    </select>\r\n\r\n    <label className=\"sd-label\" htmlFor=\"image\">Upload Ground Image:</label>\r\n    <input className=\"sd-input\" type=\"file\" name=\"image\" id=\"image\" accept=\"image/*\" required />\r\n\r\n    <label className=\"sd-label\" htmlFor=\"daysperweek\">Days Available Per Week:</label>\r\n    <input\r\n        className=\"sd-input\"\r\n        type=\"number\"\r\n        name=\"daysperweek\"\r\n        id=\"daysperweek\"\r\n        placeholder=\"Days Per Week\"\r\n        required\r\n        value={daysPerWeek}\r\n        onChange={handleDaysPerWeekChange}\r\n    />\r\n\r\n    {Array.from({ length: daysPerWeek }).map((_, index) => (\r\n        <div key={index} className=\"sd-day-container\">\r\n            <label className=\"sd-label\" htmlFor={`day-${index}`}>Day:</label>\r\n            <select\r\n                className=\"sd-select\"\r\n                name={`day-${index}`}\r\n                id={`day-${index}`}\r\n                value={daysArray[index] || ''}\r\n                onChange={(e) => handleDayChange(index, e.target.value)}\r\n                required\r\n            >\r\n                <option value=\"\" disabled>Select Day</option>\r\n                {generateDayOptions()}\r\n            </select>\r\n\r\n            <label className=\"sd-label\" htmlFor={`start-time-${index}`}>Start Time:</label>\r\n            <input\r\n                className=\"sd-input\"\r\n                type=\"time\"\r\n                name={`start-time-${index}`}\r\n                id={`start-time-${index}`}\r\n                value={timesArray[index]?.start || ''}\r\n                onChange={(e) => handleTimeChange(index, 'start', e.target.value)}\r\n                required\r\n            />\r\n\r\n            <label className=\"sd-label\" htmlFor={`end-time-${index}`}>End Time:</label>\r\n            <input\r\n                className=\"sd-input\"\r\n                type=\"time\"\r\n                name={`end-time-${index}`}\r\n                id={`end-time-${index}`}\r\n                value={timesArray[index]?.end || ''}\r\n                onChange={(e) => handleTimeChange(index, 'end', e.target.value)}\r\n                required\r\n            />\r\n        </div>\r\n    ))}\r\n\r\n    <button className=\"sd-button\" type=\"submit\">Add Ground</button>\r\n</form>\r\n\r\n      <div className=\"sd-grounds-list\">\r\n        <h2 className=\"sd-subtitle\">Available Grounds</h2>\r\n        {grounds.length > 0 ? (\r\n          <ul className=\"sd-ground-list\">\r\n            {grounds.map((ground, index) => (\r\n              <li key={index} className=\"sd-ground-item\">\r\n                <h3>{ground.groundname}</h3>\r\n                <p>Price Per Hour: {ground.priceperhour}</p>\r\n                <p>Max Players: {ground.maxplayers}</p>\r\n                <p>Ground Dimensions: {ground.grounddimensions.length} x {ground.grounddimensions.width} meters</p>\r\n                <p>Facilities: {ground.facilities.join(', ')}</p>\r\n                <p>Surface Type: {ground.surfacetype}</p>\r\n                <img src={ground.image} alt={ground.groundname} className=\"sd-ground-image\" />\r\n                <p>Status: {ground.status}</p>\r\n                <p>Verification: {ground.verify ? 'Verified' : 'Not Verified'}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No grounds available yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}