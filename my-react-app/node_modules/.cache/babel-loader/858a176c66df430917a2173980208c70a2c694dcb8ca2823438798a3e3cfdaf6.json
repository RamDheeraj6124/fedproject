{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\EditModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './EditModal.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModal = ({\n  item,\n  type,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState(item); // Populate form data with selected item\n\n  // Handler for form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handler for form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = type === \"user\" ? 'updateuser' : 'updateshop';\n    const response = await fetch(`http://localhost:5000/admin/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData),\n      credentials: 'include'\n    });\n    if (response.ok) {\n      alert('Details updated successfully');\n      onClose(); // Close the modal after submission\n    } else {\n      alert('Failed to update details');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Edit \", type === \"user\" ? \"User\" : \"Shop\", \" Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: key.charAt(0).toUpperCase() + key.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            value: formData[key],\n            onChange: handleChange,\n            disabled: ['role', '_id', 'verify', 'appliedforverification'].includes(key) // Disable non-editable fields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(EditModal, \"2m1sTIxajtVtwMGX3kErQtShduQ=\");\n_c = EditModal;\nexport default EditModal;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditModal","item","type","onClose","_s","formData","setFormData","handleChange","e","name","value","target","handleSubmit","preventDefault","endpoint","response","fetch","method","headers","body","JSON","stringify","credentials","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","id","onChange","disabled","includes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Admin/EditModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './EditModal.css'; // Import the CSS file for styles\r\n\r\nconst EditModal = ({ item, type, onClose }) => {\r\n    const [formData, setFormData] = useState(item); // Populate form data with selected item\r\n\r\n    // Handler for form field changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    // Handler for form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const endpoint = type === \"user\" ? 'updateuser' : 'updateshop';\r\n        const response = await fetch(`http://localhost:5000/admin/${endpoint}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n            credentials: 'include'\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert('Details updated successfully');\r\n            onClose(); // Close the modal after submission\r\n        } else {\r\n            alert('Failed to update details');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <h2>Edit {type === \"user\" ? \"User\" : \"Shop\"} Details</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    {Object.keys(formData).map((key) => (\r\n                        <div className=\"form-group\" key={key}>\r\n                            <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id={key}\r\n                                name={key}\r\n                                value={formData[key]}\r\n                                onChange={handleChange}\r\n                                disabled={['role', '_id', 'verify', 'appliedforverification'].includes(key)} // Disable non-editable fields\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"submit\">Save Changes</button>\r\n                    <button type=\"button\" onClick={onClose}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}