{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac\\\\fedproject\\\\my-react-app\\\\src\\\\Shop\\\\ShopDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport \"./ShopDashboard.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopDashboard = () => {\n  _s();\n  const [state, setState] = useState({});\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\n  const [daysArray, setDaysArray] = useState([]);\n  const [timesArray, setTimesArray] = useState([]);\n  const [grounds, setGrounds] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkShopSession = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/shop/checkshopsession', {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          navigate('/shoplogin');\n        } else {\n          const data = await response.json();\n          console.log('Shop Data:', data); // Debugging: Log shop data to verify structure\n          setState(data.shop);\n          setGrounds(data.shop.grounds || []); // Ensure grounds is an empty array if undefined\n        }\n      } catch (error) {\n        console.error('Error fetching shop session:', error);\n        alert('An error occurred while fetching shop session.');\n      }\n    };\n    checkShopSession();\n  }, [navigate]);\n  const updatesubmit = async e => {\n    e.preventDefault();\n    const {\n      shopname,\n      address\n    } = e.target.elements;\n    try {\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          shopname: shopname.value,\n          address: address.value\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setState(data.updatedShop);\n        alert('Shop details updated successfully');\n      } else {\n        const error = await response.json();\n        alert(`Update failed: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error updating shop details:', error);\n      alert('An error occurred while updating shop details.');\n    }\n  };\n  const addGround = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n    const availability = daysArray.map((day, index) => ({\n      day,\n      times: [{\n        start: timesArray[index].start,\n        end: timesArray[index].end\n      }]\n    }));\n    formData.append('availability', JSON.stringify(availability));\n    const data = {};\n    formData.forEach((value, key) => data[key] = value);\n    try {\n      const response = await fetch('http://localhost:5000/shop/addground', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const updatedData = await response.json();\n        console.log('Updated Grounds Data:', updatedData); // Debugging: Log updated grounds data\n        setGrounds(updatedData.shop.grounds);\n        alert('Ground added successfully!');\n        form.reset();\n        setDaysPerWeek(0);\n        setDaysArray([]);\n        setTimesArray([]);\n      } else {\n        const error = await response.json();\n        alert(`Error adding ground: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error adding ground:', error);\n      alert('An error occurred while adding the ground.');\n    }\n  };\n  const handleDaysPerWeekChange = e => {\n    const value = parseInt(e.target.value);\n    setDaysPerWeek(value);\n    setDaysArray(Array.from({\n      length: value\n    }, () => ''));\n    setTimesArray(Array.from({\n      length: value\n    }, () => ({\n      start: '',\n      end: ''\n    })));\n  };\n  const handleDayChange = (index, newValue) => {\n    const updatedDaysArray = [...daysArray];\n    updatedDaysArray[index] = newValue;\n    setDaysArray(updatedDaysArray);\n  };\n  const handleTimeChange = (index, field, value) => {\n    const updatedTimesArray = [...timesArray];\n    updatedTimesArray[index] = {\n      ...updatedTimesArray[index],\n      [field]: value\n    };\n    setTimesArray(updatedTimesArray);\n  };\n  const generateDayOptions = () => {\n    const allDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const selectedDays = daysArray.filter(day => day !== '');\n    return allDays.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: day,\n      disabled: selectedDays.includes(day),\n      children: day\n    }, day, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sd-shop-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sd-title\",\n      children: \"Shop Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sd-email\",\n      children: [\"Email: \", state.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sd-owner\",\n      children: [\"Owner Name: \", state.owner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-update-form\",\n      onSubmit: updatesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"shopname\",\n        children: \"Shop Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"shopname\",\n        id: \"shopname\",\n        placeholder: \"Shop Name\",\n        defaultValue: state.shopname,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"address\",\n        id: \"address\",\n        placeholder: \"Address\",\n        defaultValue: state.address,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Update Shop Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-add-ground-form\",\n      onSubmit: addGround,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundname\",\n        children: \"Ground Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"groundname\",\n        id: \"groundname\",\n        placeholder: \"Ground Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"priceperhour\",\n        children: \"Price Per Hour:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"priceperhour\",\n        id: \"priceperhour\",\n        placeholder: \"Price Per Hour\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"maxplayers\",\n        children: \"Maximum Number of Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"maxplayers\",\n        id: \"maxplayers\",\n        placeholder: \"Maximum Number Of Players\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundLength\",\n        children: \"Ground Length (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundLength\",\n        id: \"groundLength\",\n        placeholder: \"Ground Length (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundwidth\",\n        children: \"Ground Width (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundwidth\",\n        id: \"groundwidth\",\n        placeholder: \"Ground Width (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"facilities\",\n        children: \"Facilities Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"facilities\",\n        id: \"facilities\",\n        placeholder: \"Facilities Available\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"surfaceType\",\n        children: \"Surface Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sd-select\",\n        name: \"surfaceType\",\n        id: \"surfaceType\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Grass\",\n          children: \"Grass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Turf\",\n          children: \"Turf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Clay\",\n          children: \"Clay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Synthetic\",\n          children: \"Synthetic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"daysperweek\",\n        children: \"Days Available Per Week:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"daysperweek\",\n        id: \"daysperweek\",\n        placeholder: \"Days Per Week\",\n        required: true,\n        value: daysPerWeek,\n        onChange: handleDaysPerWeekChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), Array.from({\n        length: daysPerWeek\n      }).map((_, index) => {\n        var _timesArray$index, _timesArray$index2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sd-day-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `day-${index}`,\n            children: \"Day:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sd-select\",\n            name: `day-${index}`,\n            id: `day-${index}`,\n            value: daysArray[index] || '',\n            onChange: e => handleDayChange(index, e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), generateDayOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `start-time-${index}`,\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `start-time-${index}`,\n            id: `start-time-${index}`,\n            value: ((_timesArray$index = timesArray[index]) === null || _timesArray$index === void 0 ? void 0 : _timesArray$index.start) || '',\n            onChange: e => handleTimeChange(index, 'start', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `end-time-${index}`,\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `end-time-${index}`,\n            id: `end-time-${index}`,\n            value: ((_timesArray$index2 = timesArray[index]) === null || _timesArray$index2 === void 0 ? void 0 : _timesArray$index2.end) || '',\n            onChange: e => handleTimeChange(index, 'end', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sd-grounds-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sd-subtitle\",\n        children: \"Grounds List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), grounds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No grounds available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: grounds.map((ground, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ground Name: \", ground.groundname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price Per Hour: \", ground.priceperhour]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Maximum Players: \", ground.maxplayers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ground Dimensions: \", ground.groundLength, \"m x \", ground.groundwidth, \"m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Facilities: \", ground.facilities]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Surface Type: \", ground.surfaceType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Days Available:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: ground.availability.map((day, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [day.day, \": \", day.times.map((time, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [time.start, \" - \", time.end, \" \"]\n              }, j, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 49\n              }, this))]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopDashboard, \"+RJg6uchigK6ACqSRDMWTjhZM+Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopDashboard;\nexport default ShopDashboard;\nvar _c;\n$RefreshReg$(_c, \"ShopDashboard\");","map":{"version":3,"names":["useEffect","useState","React","useNavigate","jsxDEV","_jsxDEV","ShopDashboard","_s","state","setState","daysPerWeek","setDaysPerWeek","daysArray","setDaysArray","timesArray","setTimesArray","grounds","setGrounds","navigate","checkShopSession","response","fetch","credentials","ok","data","json","console","log","shop","error","alert","updatesubmit","e","preventDefault","shopname","address","target","elements","method","headers","body","JSON","stringify","value","updatedShop","msg","addGround","form","formData","FormData","availability","map","day","index","times","start","end","append","forEach","key","updatedData","reset","handleDaysPerWeekChange","parseInt","Array","from","length","handleDayChange","newValue","updatedDaysArray","handleTimeChange","field","updatedTimesArray","generateDayOptions","allDays","selectedDays","filter","disabled","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","email","owner","onSubmit","htmlFor","type","name","id","placeholder","defaultValue","required","onChange","_","_timesArray$index","_timesArray$index2","ground","groundname","priceperhour","maxplayers","groundLength","groundwidth","facilities","surfaceType","i","time","j","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac/fedproject/my-react-app/src/Shop/ShopDashboard.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport \"./ShopDashboard.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ShopDashboard = () => { \r\n    const [state, setState] = useState({});  \r\n    const [daysPerWeek, setDaysPerWeek] = useState(0);  \r\n    const [daysArray, setDaysArray] = useState([]); \r\n    const [timesArray, setTimesArray] = useState([]); \r\n    const [grounds, setGrounds] = useState([]); \r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkShopSession = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/shop/checkshopsession', {\r\n                    credentials: 'include'\r\n                });\r\n                if (!response.ok) {\r\n                    navigate('/shoplogin');\r\n                } else {\r\n                    const data = await response.json();\r\n                    console.log('Shop Data:', data); // Debugging: Log shop data to verify structure\r\n                    setState(data.shop);\r\n                    setGrounds(data.shop.grounds || []);  // Ensure grounds is an empty array if undefined\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching shop session:', error);\r\n                alert('An error occurred while fetching shop session.');\r\n            }\r\n        };\r\n\r\n        checkShopSession();\r\n    }, [navigate]);\r\n\r\n    const updatesubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { shopname, address } = e.target.elements;\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/shop/updateshop', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    shopname: shopname.value,\r\n                    address: address.value\r\n                }),\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setState(data.updatedShop);\r\n                alert('Shop details updated successfully');\r\n            } else {\r\n                const error = await response.json();\r\n                alert(`Update failed: ${error.msg}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating shop details:', error);\r\n            alert('An error occurred while updating shop details.');\r\n        }\r\n    };\r\n\r\n    const addGround = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const formData = new FormData(form);\r\n        const availability = daysArray.map((day, index) => ({\r\n            day,\r\n            times: [{ start: timesArray[index].start, end: timesArray[index].end }]\r\n        }));\r\n        formData.append('availability', JSON.stringify(availability));\r\n        const data = {};\r\n        formData.forEach((value, key) => (data[key] = value));\r\n        \r\n        try {\r\n            const response = await fetch('http://localhost:5000/shop/addground', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data),\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedData = await response.json();\r\n                console.log('Updated Grounds Data:', updatedData); // Debugging: Log updated grounds data\r\n                setGrounds(updatedData.shop.grounds);\r\n                alert('Ground added successfully!');\r\n                form.reset();\r\n                setDaysPerWeek(0);\r\n                setDaysArray([]);\r\n                setTimesArray([]);\r\n            } else {\r\n                const error = await response.json();\r\n                alert(`Error adding ground: ${error.msg}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding ground:', error);\r\n            alert('An error occurred while adding the ground.');\r\n        }\r\n    };\r\n    \r\n    const handleDaysPerWeekChange = (e) => {\r\n        const value = parseInt(e.target.value);\r\n        setDaysPerWeek(value);\r\n        setDaysArray(Array.from({ length: value }, () => ''));\r\n        setTimesArray(Array.from({ length: value }, () => ({ start: '', end: '' })));\r\n    };\r\n\r\n    const handleDayChange = (index, newValue) => {\r\n        const updatedDaysArray = [...daysArray];\r\n        updatedDaysArray[index] = newValue;\r\n        setDaysArray(updatedDaysArray);\r\n    };\r\n\r\n    const handleTimeChange = (index, field, value) => {\r\n        const updatedTimesArray = [...timesArray];\r\n        updatedTimesArray[index] = { ...updatedTimesArray[index], [field]: value };\r\n        setTimesArray(updatedTimesArray);\r\n    };\r\n\r\n    const generateDayOptions = () => {\r\n        const allDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n        const selectedDays = daysArray.filter(day => day !== '');\r\n        return allDays.map((day) => (\r\n            <option\r\n                key={day}\r\n                value={day}\r\n                disabled={selectedDays.includes(day)}\r\n            >\r\n                {day}\r\n            </option>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"sd-shop-dashboard\">\r\n            <h1 className=\"sd-title\">Shop Dashboard</h1>\r\n            <h3 className=\"sd-email\">Email: {state.email}</h3>\r\n            <h3 className=\"sd-owner\">Owner Name: {state.owner}</h3>\r\n            \r\n            <form className=\"sd-update-form\" onSubmit={updatesubmit}>\r\n                <label className=\"sd-label\" htmlFor=\"shopname\">Shop Name:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"text\"\r\n                    name=\"shopname\"\r\n                    id=\"shopname\"\r\n                    placeholder=\"Shop Name\"\r\n                    defaultValue={state.shopname}\r\n                    required\r\n                />\r\n                <label className=\"sd-label\" htmlFor=\"address\">Address:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    placeholder=\"Address\"\r\n                    defaultValue={state.address}\r\n                    required\r\n                />\r\n                <button className=\"sd-button\" type=\"submit\">Update Shop Details</button>\r\n            </form>\r\n            \r\n            <form className=\"sd-add-ground-form\" onSubmit={addGround}>\r\n                <label className=\"sd-label\" htmlFor=\"groundname\">Ground Name:</label>\r\n                <input className=\"sd-input\" type=\"text\" name=\"groundname\" id=\"groundname\" placeholder=\"Ground Name\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"priceperhour\">Price Per Hour:</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"priceperhour\" id=\"priceperhour\" placeholder=\"Price Per Hour\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"maxplayers\">Maximum Number of Players:</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"maxplayers\" id=\"maxplayers\" placeholder=\"Maximum Number Of Players\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"groundLength\">Ground Length (meters):</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"groundLength\" id=\"groundLength\" placeholder=\"Ground Length (meters)\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"groundwidth\">Ground Width (meters):</label>\r\n                <input className=\"sd-input\" type=\"number\" name=\"groundwidth\" id=\"groundwidth\" placeholder=\"Ground Width (meters)\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"facilities\">Facilities Available:</label>\r\n                <input className=\"sd-input\" type=\"text\" name=\"facilities\" id=\"facilities\" placeholder=\"Facilities Available\" required />\r\n\r\n                <label className=\"sd-label\" htmlFor=\"surfaceType\">Surface Type:</label>\r\n                <select className=\"sd-select\" name=\"surfaceType\" id=\"surfaceType\" required>\r\n                    <option value=\"Grass\">Grass</option>\r\n                    <option value=\"Turf\">Turf</option>\r\n                    <option value=\"Clay\">Clay</option>\r\n                    <option value=\"Hard\">Hard</option>\r\n                    <option value=\"Synthetic\">Synthetic</option>\r\n                </select>\r\n\r\n                <label className=\"sd-label\" htmlFor=\"daysperweek\">Days Available Per Week:</label>\r\n                <input\r\n                    className=\"sd-input\"\r\n                    type=\"number\"\r\n                    name=\"daysperweek\"\r\n                    id=\"daysperweek\"\r\n                    placeholder=\"Days Per Week\"\r\n                    required\r\n                    value={daysPerWeek}\r\n                    onChange={handleDaysPerWeekChange}\r\n                />\r\n\r\n                {Array.from({ length: daysPerWeek }).map((_, index) => (\r\n                    <div key={index} className=\"sd-day-container\">\r\n                        <label className=\"sd-label\" htmlFor={`day-${index}`}>Day:</label>\r\n                        <select\r\n                            className=\"sd-select\"\r\n                            name={`day-${index}`}\r\n                            id={`day-${index}`}\r\n                            value={daysArray[index] || ''}\r\n                            onChange={(e) => handleDayChange(index, e.target.value)}\r\n                            required\r\n                        >\r\n                            <option value=\"\" disabled>Select Day</option>\r\n                            {generateDayOptions()}\r\n                        </select>\r\n\r\n                        <label className=\"sd-label\" htmlFor={`start-time-${index}`}>Start Time:</label>\r\n                        <input\r\n                            className=\"sd-input\"\r\n                            type=\"time\"\r\n                            name={`start-time-${index}`}\r\n                            id={`start-time-${index}`}\r\n                            value={timesArray[index]?.start || ''}\r\n                            onChange={(e) => handleTimeChange(index, 'start', e.target.value)}\r\n                            required\r\n                        />\r\n                        <label className=\"sd-label\" htmlFor={`end-time-${index}`}>End Time:</label>\r\n                        <input\r\n                            className=\"sd-input\"\r\n                            type=\"time\"\r\n                            name={`end-time-${index}`}\r\n                            id={`end-time-${index}`}\r\n                            value={timesArray[index]?.end || ''}\r\n                            onChange={(e) => handleTimeChange(index, 'end', e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <button className=\"sd-button\" type=\"submit\">Add Ground</button>\r\n            </form>\r\n\r\n            <div className=\"sd-grounds-list\">\r\n                <h3 className=\"sd-subtitle\">Grounds List:</h3>\r\n                {grounds.length === 0 ? (\r\n                    <p>No grounds available.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {grounds.map((ground, index) => (\r\n                            <li key={index}>\r\n                                <p>Ground Name: {ground.groundname}</p>\r\n                                <p>Price Per Hour: {ground.priceperhour}</p>\r\n                                <p>Maximum Players: {ground.maxplayers}</p>\r\n                                <p>Ground Dimensions: {ground.groundLength}m x {ground.groundwidth}m</p>\r\n                                <p>Facilities: {ground.facilities}</p>\r\n                                <p>Surface Type: {ground.surfaceType}</p>\r\n                                <p>Days Available:</p>\r\n                                <ul>\r\n                                    {ground.availability.map((day, i) => (\r\n                                        <li key={i}>\r\n                                            {day.day}: {day.times.map((time, j) => (\r\n                                                <span key={j}>{time.start} - {time.end} </span>\r\n                                            ))}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShopDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}