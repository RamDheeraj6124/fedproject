{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\Revenuecheck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\"; // Only import Pie from react-chartjs-2\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'; // Import necessary components from chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend); // Register the ArcElement and other necessary components\n\nconst RevenueCheck = () => {\n  _s();\n  const [shopRevenue, setShopRevenue] = useState([]);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const checkRevenue = async () => {\n    try {\n      const response = await fetch('https://localhost:5000/admin/checkrevenue');\n      const data = await response.json();\n\n      // Calculate total revenue and shop-wise revenue\n      let total = 0;\n      const shopRevenueMap = {};\n      data.revenues.forEach(booking => {\n        // Ensure you access revenues from the response\n        const shopId = booking.shop; // Adjust based on your data structure\n        const amount = booking.revenue; // Adjust to match your response structure\n\n        total += amount; // Sum total revenue\n        if (shopRevenueMap[shopId]) {\n          shopRevenueMap[shopId] += amount; // Accumulate revenue for the shop\n        } else {\n          shopRevenueMap[shopId] = amount; // Initialize revenue for the shop\n        }\n      });\n      setTotalRevenue(total);\n      setShopRevenue(Object.entries(shopRevenueMap)); // Convert to array of [shopId, revenue]\n    } catch (error) {\n      console.error(\"Error fetching revenue data:\", error);\n    }\n  };\n  useEffect(() => {\n    checkRevenue();\n  }, []);\n\n  // Prepare data for Pie Chart\n  const chartData = {\n    labels: shopRevenue.map(([shopId]) => shopId),\n    // Map to shop IDs\n    datasets: [{\n      label: 'Shop Revenue',\n      data: shopRevenue.map(([, revenue]) => revenue),\n      // Map to revenue values\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'] // Add more colors as needed\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total Revenue: \", totalRevenue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shop Revenue Breakdown:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: shopRevenue.map(([shopId, revenue]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [shopId, \": \", revenue]\n      }, shopId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Revenue Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(RevenueCheck, \"qhhT8v/d617fWT1B24jhPixgPLg=\");\n_c = RevenueCheck;\nexport default RevenueCheck;\nvar _c;\n$RefreshReg$(_c, \"RevenueCheck\");","map":{"version":3,"names":["React","useEffect","useState","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","RevenueCheck","_s","shopRevenue","setShopRevenue","totalRevenue","setTotalRevenue","checkRevenue","response","fetch","data","json","total","shopRevenueMap","revenues","forEach","booking","shopId","shop","amount","revenue","Object","entries","error","console","chartData","labels","map","datasets","label","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Admin/Revenuecheck.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\"; // Only import Pie from react-chartjs-2\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'; // Import necessary components from chart.js\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend); // Register the ArcElement and other necessary components\r\n\r\nconst RevenueCheck = () => {\r\n    const [shopRevenue, setShopRevenue] = useState([]);\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n\r\n    const checkRevenue = async () => {\r\n        try {\r\n            const response = await fetch('https://localhost:5000/admin/checkrevenue');\r\n            const data = await response.json();\r\n\r\n            // Calculate total revenue and shop-wise revenue\r\n            let total = 0;\r\n            const shopRevenueMap = {};\r\n\r\n            data.revenues.forEach((booking) => { // Ensure you access revenues from the response\r\n                const shopId = booking.shop; // Adjust based on your data structure\r\n                const amount = booking.revenue; // Adjust to match your response structure\r\n\r\n                total += amount; // Sum total revenue\r\n                if (shopRevenueMap[shopId]) {\r\n                    shopRevenueMap[shopId] += amount; // Accumulate revenue for the shop\r\n                } else {\r\n                    shopRevenueMap[shopId] = amount; // Initialize revenue for the shop\r\n                }\r\n            });\r\n\r\n            setTotalRevenue(total);\r\n            setShopRevenue(Object.entries(shopRevenueMap)); // Convert to array of [shopId, revenue]\r\n        } catch (error) {\r\n            console.error(\"Error fetching revenue data:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkRevenue();\r\n    }, []);\r\n\r\n    // Prepare data for Pie Chart\r\n    const chartData = {\r\n        labels: shopRevenue.map(([shopId]) => shopId), // Map to shop IDs\r\n        datasets: [{\r\n            label: 'Shop Revenue',\r\n            data: shopRevenue.map(([, revenue]) => revenue), // Map to revenue values\r\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'], // Add more colors as needed\r\n        }],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Total Revenue: {totalRevenue}</h1>\r\n            <h2>Shop Revenue Breakdown:</h2>\r\n            <ul>\r\n                {shopRevenue.map(([shopId, revenue]) => (\r\n                    <li key={shopId}>{shopId}: {revenue}</li>\r\n                ))}\r\n            </ul>\r\n            <h2>Revenue Distribution</h2>\r\n            <Pie data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RevenueCheck;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}