{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [username, setUsername] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [shops, setShops] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkSession = async () => {\n      const response = await fetch('http://localhost:5000/admin/checksession', {\n        credentials: 'include' // Send cookies with the request\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUsername(data.username); // Set the username if session is valid\n        setUsers(data.details.users); // Set the users if session is valid\n        setShops(data.details.shops); // Set the shops if session is valid\n      } else {\n        navigate('/login');\n        setUsername(null); // Clear username if session is not valid\n      }\n    };\n    checkSession();\n  }, []);\n  if (!username) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-message\",\n      children: \"You must be logged in as an admin to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" - \", user.email]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: shops.map(shop => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [shop.shopname, \" - \", shop.owner, \" - \", shop.email]\n      }, shop._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"vJfn4pUMuMLpCLJpi1O4oAjR6Mg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","username","setUsername","users","setUsers","shops","setShops","navigate","checkSession","response","fetch","credentials","ok","data","json","details","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","email","_id","shop","shopname","owner","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Admin/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminDashboard.css'; // Import the CSS file\r\n\r\nconst AdminDashboard = () => {\r\n    const [username, setUsername] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [shops, setShops] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            const response = await fetch('http://localhost:5000/admin/checksession', {\r\n                credentials: 'include' // Send cookies with the request\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setUsername(data.username); // Set the username if session is valid\r\n                setUsers(data.details.users); // Set the users if session is valid\r\n                setShops(data.details.shops); // Set the shops if session is valid\r\n            } else {\r\n                navigate('/login');\r\n                setUsername(null); // Clear username if session is not valid\r\n            }\r\n        };\r\n\r\n        checkSession();\r\n    }, []);\r\n\r\n    if (!username) {\r\n        return <div className=\"login-message\">You must be logged in as an admin to view this page.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <h1>Welcome, {username}</h1>\r\n            <h2>Users</h2>\r\n            <ul>\r\n                {users.map(user => (\r\n                    <li key={user._id}>{user.username} - {user.email}</li>\r\n                ))}\r\n            </ul>\r\n            <h2>Shops</h2>\r\n            <ul>\r\n                {shops.map(shop => (\r\n                    <li key={shop._id}>{shop.shopname} - {shop.owner} - {shop.email}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}