{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Home\\\\Booking\\\\BookingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './BookingPage.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [venueData, setVenueData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [playDuration, setPlayDuration] = useState(1);\n  const [availableDays, setAvailableDays] = useState([]);\n  const [pricePerHour, setPricePerHour] = useState(0);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n  const shopname = name.replace(/-/g, ' ').split('_')[0];\n  const effectRan = useRef(false);\n  const [address, setAddress] = useState('');\n  const [alreadybookedgrounds, setalreadybookedgrounds] = useState(null);\n  const [sessionstate, setsessionstate] = useState(false);\n  const [platformpercentage, setplatformpercentage] = useState(0);\n  useEffect(() => {\n    if (effectRan.current === false) {\n      const fetchVenueData = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/shop/loadground', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name\n            }),\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setVenueData(data.ground);\n            setAddress(data.address);\n            setPricePerHour(data.ground.priceperhour);\n            extractAvailableDays(data.ground.availability);\n          } else {\n            const errorData = await response.json();\n            setError(errorData.message);\n          }\n        } catch (error) {\n          setError('An error occurred while fetching Ground.');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchVenueData();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = true;\n    };\n  }, [name]);\n  const extractAvailableDays = availability => {\n    const days = availability.map(timing => timing.day);\n    setAvailableDays(days);\n  };\n  const openBookingModal = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/user/checksession', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setsessionstate(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const percentage = await getpercentage();\n      setplatformpercentage(percentage);\n    } catch (err) {\n      console.log(err);\n    }\n    setIsModalOpen(true);\n  };\n  const getpercentage = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/admin/getpercentage', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        return data.percentage;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const closeBookingModal = () => {\n    setIsModalOpen(false);\n    setSelectedDate(null);\n    setSelectedTime('');\n    setAvailableTimeSlots([]);\n    setPlayDuration(1);\n  };\n  const handleDateSelection = date => {\n    setSelectedDate(date);\n    fetchAvailableTimeSlots(date, playDuration);\n  };\n  const generateTimeSlots = (start, end, duration) => {\n    const startTime = convertTimeStringToMinutes(start);\n    const endTime = convertTimeStringToMinutes(end);\n    const slots = [];\n    for (let time = startTime; time + duration * 60 <= endTime; time += 30) {\n      const slotStart = convertMinutesToTimeString(time);\n      slots.push(slotStart);\n    }\n    return slots;\n  };\n  const fetchAvailableTimeSlots = (date, duration) => {\n    const selectedDay = new Date(date).toLocaleString('en-US', {\n      weekday: 'long'\n    });\n    const thatdaytime = checkGroundThatDateIf();\n    const selectedDayAvailability = venueData.availability.find(availability => availability.day === selectedDay);\n    if (selectedDayAvailability) {\n      const slots = [];\n      selectedDayAvailability.times.forEach(timeSlot => {\n        const generatedSlots = generateTimeSlots(timeSlot.start, timeSlot.end, duration);\n        slots.push(...generatedSlots);\n      });\n      setAvailableTimeSlots(slots);\n    } else {\n      setAvailableTimeSlots([]);\n    }\n  };\n  const handleTimeSelection = event => {\n    setSelectedTime(event.target.value);\n  };\n  const handleDurationChange = event => {\n    const duration = event.target.value;\n    setPlayDuration(duration);\n    if (selectedDate) {\n      fetchAvailableTimeSlots(selectedDate, duration);\n    }\n  };\n  const isDateAvailable = date => {\n    const day = new Date(date).toLocaleString('en-US', {\n      weekday: 'long'\n    });\n    return availableDays.includes(day);\n  };\n  const isDisabled = date => {\n    return isDateAvailable(date);\n  };\n  const convertTimeStringToMinutes = timeString => {\n    const [time, modifier] = timeString.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (modifier === 'PM' && hours !== '12') {\n      hours = parseInt(hours) + 12;\n    }\n    if (modifier === 'AM' && hours === '12') {\n      hours = '00';\n    }\n    return parseInt(hours) * 60 + parseInt(minutes);\n  };\n  const convertMinutesToTimeString = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const modifier = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes} ${modifier}`;\n  };\n  const checkGroundThatDateIf = async () => {\n    if (venueData && selectedDate && venueData.groundname) {\n      console.log(\"venueData:\", venueData);\n      console.log(\"selectedDate:\", selectedDate);\n      console.log(\"shopname:\", shopname);\n      const groundname = venueData.groundname;\n      try {\n        const response = await fetch('http://localhost:5000/shop/checkgroundifthatdate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            selectedDate,\n            shopname,\n            groundname\n          }),\n          credentials: 'include'\n        });\n        console.log('hi'); // Check if this logs\n\n        if (response.ok) {\n          const data = await response.json();\n          return data;\n          setalreadybookedgrounds(data);\n        } else {\n          const errorData = await response.json();\n          console.log(errorData);\n        }\n      } catch (error) {\n        console.log('Error during fetch:', error);\n      }\n    } else {\n      console.log(\"Required data is missing. VenueData, selectedDate, or shopname is null.\");\n    }\n  };\n  const bookinghandle = async () => {\n    const bookingDetails = {\n      shopname: shopname,\n      // The shop ID associated with the booking\n      groundname: venueData.groundname,\n      date: selectedDate,\n      timeSlot: {\n        start: selectedTime,\n        end: calculateEndTime(selectedTime, playDuration) // Adjusted to pass the date\n      },\n      groundfee: pricePerHour * playDuration,\n      platformfee: Number((pricePerHour * playDuration * platformpercentage / 100).toFixed(2)),\n      amountPaid: Number((pricePerHour * playDuration + pricePerHour * playDuration * platformpercentage / 100).toFixed(2))\n    };\n    console.log(bookingDetails);\n    try {\n      const response = await fetch('http://localhost:5000/shop/bookground', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingDetails),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        alert(`Booking confirmed! ${result.message}`);\n        closeBookingModal();\n      } else {\n        const errorData = await response.json();\n        alert(`Booking failed: ${errorData.message}`);\n      }\n    } catch (error) {\n      alert('An error occurred while booking the ground.');\n    }\n  };\n  const calculateEndTime = (startTime, duration) => {\n    // Ensure the startTime is in \"HH:mm\" format\n    const timeParts = startTime.split(':');\n    if (timeParts.length !== 2) {\n      console.error(\"Invalid time format. Expected HH:mm\");\n      return null; // Handle error accordingly\n    }\n    let hours = parseInt(timeParts[0], 10);\n    let minutes = parseInt(timeParts[1], 10);\n\n    // Check if hours and minutes are valid numbers\n    if (isNaN(hours) || isNaN(minutes) || hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {\n      console.error(\"Invalid hours or minutes:\", {\n        hours,\n        minutes\n      });\n      return null; // Handle error accordingly\n    }\n\n    // Create a Date object for the start time\n    const startDate = new Date(); // Get current date\n    startDate.setHours(hours, minutes, 0, 0); // Set the hours and minutes\n\n    // Calculate the end time by adding duration in milliseconds\n    const endDate = new Date(startDate.getTime() + duration * 60 * 60 * 1000); // duration in hours\n\n    // Format the end time as HH:mm\n    const endTime = endDate.toTimeString().slice(0, 5); // Returns time in HH:mm format\n\n    console.log(`Start Time: ${startTime}, Duration: ${duration} hours, End Time: ${endTime}`); // Log to check\n\n    return endTime; // Return the calculated end time\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-loading\",\n      children: \"Loading Ground...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 12\n    }, this);\n  }\n  if (!venueData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-no-data\",\n      children: \"No venue data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-booking-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"bp-main-title\",\n      children: [shopname, \" - \", venueData.groundname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-content\",\n      children: [/*#__PURE__*/_jsxDEV(VenueDetails, {\n        name: venueData.groundname,\n        dimensions: venueData.grounddimensions ? `Length: ${venueData.grounddimensions.length}m, Width: ${venueData.grounddimensions.width}m` : 'No dimensions available',\n        address: address ? `Address: ${address}` : 'Address not Available',\n        image: venueData.image,\n        rating: venueData.reviews ? (venueData.reviews.reduce((sum, review) => sum + review.rating, 0) / venueData.reviews.length).toFixed(1) : 'No ratings yet',\n        ratingCount: venueData.reviews ? venueData.reviews.length : 0,\n        timing: venueData.availability || [],\n        facilities: venueData.facilities || [],\n        pricePerHour: venueData.priceperhour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-side-info\",\n        children: /*#__PURE__*/_jsxDEV(BookingInfo, {\n          pricePerHour: venueData.priceperhour,\n          onBookNow: openBookingModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bp-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bp-modal-title\",\n          children: [\"Book Now\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bp-close\",\n            onClick: closeBookingModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Select Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: handleDateSelection,\n          minDate: new Date(),\n          filterDate: isDisabled,\n          dateFormat: \"yyyy/MM/dd\",\n          className: \"bp-datepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Select Duration (in hours):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: playDuration,\n          onChange: handleDurationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Available Time Slots:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTime,\n          onChange: handleTimeSelection,\n          className: \"bp-time-slot-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a time slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), availableTimeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: slot,\n            children: slot\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Ground Price: \\u20B9\", (pricePerHour * playDuration).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Platform Fee: \\u20B9\", (pricePerHour * playDuration * platformpercentage / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total Fee: \\u20B9\", (pricePerHour * playDuration + pricePerHour * playDuration * platformpercentage / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), sessionstate && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: bookinghandle,\n          className: \"bp-book-now-button\",\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 30\n        }, this), !sessionstate && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Please log in to book a ground.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"tBCwM6/JJBnQmKFzIsh32nT96lk=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nconst VenueDetails = ({\n  name,\n  dimensions,\n  address,\n  image,\n  rating,\n  ratingCount,\n  timing,\n  facilities,\n  pricePerHour\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-venue-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: `${name}`,\n      className: \"bp-venue-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dimensions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price per hour: \\u20B9\", pricePerHour]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", rating, \" (\", ratingCount, \" reviews)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Facilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: facilities.map((facility, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: facility\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Timing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: timing.map((t, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [t.day, \": \", t.times.map(time => `${time.start} - ${time.end}`).join(', ')]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n};\n_c2 = VenueDetails;\nconst BookingInfo = ({\n  pricePerHour,\n  onBookNow\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bp-booking-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Book Your Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price per hour: \\u20B9\", pricePerHour]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBookNow,\n      className: \"bp-book-now-button\",\n      children: \"Book Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n_c3 = BookingInfo;\nexport default BookingPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingPage\");\n$RefreshReg$(_c2, \"VenueDetails\");\n$RefreshReg$(_c3, \"BookingInfo\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","DatePicker","jsxDEV","_jsxDEV","BookingPage","_s","name","venueData","setVenueData","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","selectedDate","setSelectedDate","selectedTime","setSelectedTime","playDuration","setPlayDuration","availableDays","setAvailableDays","pricePerHour","setPricePerHour","availableTimeSlots","setAvailableTimeSlots","shopname","replace","split","effectRan","address","setAddress","alreadybookedgrounds","setalreadybookedgrounds","sessionstate","setsessionstate","platformpercentage","setplatformpercentage","current","fetchVenueData","response","fetch","method","headers","body","JSON","stringify","credentials","ok","data","json","ground","priceperhour","extractAvailableDays","availability","errorData","message","days","map","timing","day","openBookingModal","console","log","percentage","getpercentage","err","closeBookingModal","handleDateSelection","date","fetchAvailableTimeSlots","generateTimeSlots","start","end","duration","startTime","convertTimeStringToMinutes","endTime","slots","time","slotStart","convertMinutesToTimeString","push","selectedDay","Date","toLocaleString","weekday","thatdaytime","checkGroundThatDateIf","selectedDayAvailability","find","times","forEach","timeSlot","generatedSlots","handleTimeSelection","event","target","value","handleDurationChange","isDateAvailable","includes","isDisabled","timeString","modifier","hours","minutes","parseInt","Math","floor","mins","formattedHours","formattedMinutes","toString","padStart","groundname","bookinghandle","bookingDetails","calculateEndTime","groundfee","platformfee","Number","toFixed","amountPaid","result","alert","timeParts","length","isNaN","startDate","setHours","endDate","getTime","toTimeString","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","VenueDetails","dimensions","grounddimensions","width","image","rating","reviews","reduce","sum","review","ratingCount","facilities","BookingInfo","onBookNow","onClick","htmlFor","selected","onChange","minDate","filterDate","dateFormat","type","min","disabled","slot","index","href","_c","src","alt","facility","t","join","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Home/Booking/BookingPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './BookingPage.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst BookingPage = () => {\r\n  const { name } = useParams();\r\n  const [venueData, setVenueData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [playDuration, setPlayDuration] = useState(1); \r\n  const [availableDays, setAvailableDays] = useState([]);\r\n  const [pricePerHour, setPricePerHour] = useState(0);\r\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\r\n  const shopname = name.replace(/-/g, ' ').split('_')[0];\r\n  const effectRan = useRef(false);\r\n  const [address, setAddress] = useState('');\r\n  const [alreadybookedgrounds,setalreadybookedgrounds]=useState(null);\r\n  const [sessionstate,setsessionstate]=useState(false);\r\n  const [platformpercentage,setplatformpercentage]=useState(0);\r\n\r\n  useEffect(() => {\r\n    if (effectRan.current === false) {\r\n      const fetchVenueData = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/shop/loadground', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name }),\r\n            credentials: 'include',\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setVenueData(data.ground);\r\n            setAddress(data.address);\r\n            setPricePerHour(data.ground.priceperhour);\r\n            extractAvailableDays(data.ground.availability);\r\n          } else {\r\n            const errorData = await response.json();\r\n            setError(errorData.message);\r\n          }\r\n        } catch (error) {\r\n          setError('An error occurred while fetching Ground.');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchVenueData();\r\n      effectRan.current = true;\r\n    } \r\n\r\n    return () => {\r\n      effectRan.current = true;\r\n    };\r\n  }, [name]);\r\n\r\n  const extractAvailableDays = (availability) => {\r\n    const days = availability.map(timing => timing.day);\r\n    setAvailableDays(days);\r\n  };\r\n\r\n  const openBookingModal =async () => {\r\n    try{\r\n     const response=await fetch('http://localhost:5000/user/checksession',{credentials: 'include'}) ;\r\n     if(response.ok){\r\n      setsessionstate(true);\r\n     }\r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n    try{\r\n      const percentage=await getpercentage();\r\n      setplatformpercentage(percentage);\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n\r\n  const getpercentage=async ()=>{\r\n    try{\r\n      const response=await fetch('http://localhost:5000/admin/getpercentage',{credentials: 'include'});\r\n      if(response.ok){\r\n        const data=await response.json();\r\n        return data.percentage;\r\n      }}catch(err){\r\n        console.log(err);\r\n      }};\r\n\r\n  const closeBookingModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedDate(null);\r\n    setSelectedTime('');\r\n    setAvailableTimeSlots([]);\r\n    setPlayDuration(1);\r\n  };\r\n\r\n  const handleDateSelection = (date) => {\r\n    setSelectedDate(date);\r\n    fetchAvailableTimeSlots(date, playDuration);\r\n  };\r\n\r\n  const generateTimeSlots = (start, end, duration) => {\r\n    const startTime = convertTimeStringToMinutes(start);\r\n    const endTime = convertTimeStringToMinutes(end);\r\n    const slots = [];\r\n\r\n    for (let time = startTime; time + (duration * 60) <= endTime; time += 30) {\r\n      const slotStart = convertMinutesToTimeString(time);\r\n      slots.push(slotStart);\r\n    }\r\n\r\n    return slots;\r\n  };\r\n\r\n  const fetchAvailableTimeSlots = (date, duration) => {\r\n    const selectedDay = new Date(date).toLocaleString('en-US', { weekday: 'long' });\r\n    const thatdaytime=checkGroundThatDateIf();\r\n\r\n    const selectedDayAvailability = venueData.availability.find(\r\n      (availability) => availability.day === selectedDay\r\n    );\r\n\r\n    if (selectedDayAvailability) {\r\n      const slots = [];\r\n      selectedDayAvailability.times.forEach((timeSlot) => {\r\n        const generatedSlots = generateTimeSlots(timeSlot.start, timeSlot.end, duration);\r\n        slots.push(...generatedSlots);\r\n      });\r\n      setAvailableTimeSlots(slots);\r\n    } else {\r\n      setAvailableTimeSlots([]);\r\n    }\r\n  };\r\n\r\n  const handleTimeSelection = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDurationChange = (event) => {\r\n    const duration = event.target.value;\r\n    setPlayDuration(duration);\r\n    if (selectedDate) {\r\n      fetchAvailableTimeSlots(selectedDate, duration);\r\n    }\r\n  };\r\n\r\n  const isDateAvailable = (date) => {\r\n    const day = new Date(date).toLocaleString('en-US', { weekday: 'long' });\r\n    return availableDays.includes(day);\r\n  };\r\n\r\n  const isDisabled = (date) => {\r\n    return isDateAvailable(date);\r\n  };\r\n\r\n  const convertTimeStringToMinutes = (timeString) => {\r\n    const [time, modifier] = timeString.split(' ');\r\n    let [hours, minutes] = time.split(':');\r\n    if (modifier === 'PM' && hours !== '12') {\r\n      hours = parseInt(hours) + 12;\r\n    }\r\n    if (modifier === 'AM' && hours === '12') {\r\n      hours = '00';\r\n    }\r\n    return parseInt(hours) * 60 + parseInt(minutes);\r\n  };\r\n\r\n  const convertMinutesToTimeString = (minutes) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    const modifier = hours >= 12 ? 'PM' : 'AM';\r\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\r\n    const formattedMinutes = mins.toString().padStart(2, '0');\r\n    return `${formattedHours}:${formattedMinutes} ${modifier}`;\r\n  };\r\n\r\n    const checkGroundThatDateIf = async () => {\r\n      if (venueData && selectedDate && venueData.groundname) {\r\n        console.log(\"venueData:\", venueData);\r\n        console.log(\"selectedDate:\", selectedDate);\r\n        console.log(\"shopname:\", shopname);\r\n  \r\n        const groundname = venueData.groundname;\r\n        try {\r\n          const response = await fetch('http://localhost:5000/shop/checkgroundifthatdate', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ selectedDate, shopname, groundname }),\r\n            credentials: 'include',\r\n          });\r\n          console.log('hi'); // Check if this logs\r\n  \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            return data;\r\n            setalreadybookedgrounds(data);\r\n          } else {\r\n            const errorData = await response.json();\r\n            console.log(errorData);\r\n          }\r\n        } catch (error) {\r\n          console.log('Error during fetch:', error);\r\n        }\r\n      } else {\r\n        console.log(\"Required data is missing. VenueData, selectedDate, or shopname is null.\");\r\n      }\r\n    };\r\n    const bookinghandle = async () => {\r\n      const bookingDetails = {\r\n        shopname: shopname, // The shop ID associated with the booking\r\n        groundname: venueData.groundname,\r\n        date: selectedDate,\r\n        timeSlot: {\r\n            start: selectedTime,\r\n            end: calculateEndTime(selectedTime, playDuration), // Adjusted to pass the date\r\n        },\r\n        groundfee: pricePerHour * playDuration,\r\n        platformfee: Number((pricePerHour * playDuration * platformpercentage / 100).toFixed(2)),\r\n        amountPaid: Number(((pricePerHour * playDuration) + \r\n                    (pricePerHour * playDuration * platformpercentage / 100)).toFixed(2))\r\n    };\r\n    \r\n      console.log(bookingDetails);\r\n  \r\n      try {\r\n          const response = await fetch('http://localhost:5000/shop/bookground', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(bookingDetails),\r\n              credentials: 'include',\r\n          });\r\n  \r\n          if (response.ok) {\r\n              const result = await response.json();\r\n              alert(`Booking confirmed! ${result.message}`);\r\n              closeBookingModal();\r\n          } else {\r\n              const errorData = await response.json();\r\n              alert(`Booking failed: ${errorData.message}`);\r\n          }\r\n      } catch (error) {\r\n          alert('An error occurred while booking the ground.');\r\n      }\r\n  };\r\nconst calculateEndTime = (startTime, duration) => {\r\n  // Ensure the startTime is in \"HH:mm\" format\r\n  const timeParts = startTime.split(':');\r\n  if (timeParts.length !== 2) {\r\n      console.error(\"Invalid time format. Expected HH:mm\");\r\n      return null; // Handle error accordingly\r\n  }\r\n\r\n  let hours = parseInt(timeParts[0], 10);\r\n  let minutes = parseInt(timeParts[1], 10);\r\n\r\n  // Check if hours and minutes are valid numbers\r\n  if (isNaN(hours) || isNaN(minutes) || hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {\r\n      console.error(\"Invalid hours or minutes:\", { hours, minutes });\r\n      return null; // Handle error accordingly\r\n  }\r\n\r\n  // Create a Date object for the start time\r\n  const startDate = new Date(); // Get current date\r\n  startDate.setHours(hours, minutes, 0, 0); // Set the hours and minutes\r\n\r\n  // Calculate the end time by adding duration in milliseconds\r\n  const endDate = new Date(startDate.getTime() + duration * 60 * 60 * 1000); // duration in hours\r\n\r\n  // Format the end time as HH:mm\r\n  const endTime = endDate.toTimeString().slice(0, 5); // Returns time in HH:mm format\r\n\r\n  console.log(`Start Time: ${startTime}, Duration: ${duration} hours, End Time: ${endTime}`); // Log to check\r\n\r\n  return endTime; // Return the calculated end time\r\n};\r\n\r\n  \r\n  \r\n  if (loading) {\r\n    return <div className=\"bp-loading\">Loading Ground...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"bp-error\">{error}</div>;\r\n  }\r\n\r\n  if (!venueData) {\r\n    return <div className=\"bp-no-data\">No venue data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bp-booking-page\">\r\n      <h1 className=\"bp-main-title\">{shopname} - {venueData.groundname}</h1>\r\n      <div className=\"bp-content\">\r\n        <VenueDetails\r\n          name={venueData.groundname}\r\n          dimensions={venueData.grounddimensions ? `Length: ${venueData.grounddimensions.length}m, Width: ${venueData.grounddimensions.width}m` : 'No dimensions available'}\r\n          address={address ? `Address: ${address}` : 'Address not Available'}\r\n          image={venueData.image}\r\n          rating={venueData.reviews ? (venueData.reviews.reduce((sum, review) => sum + review.rating, 0) / venueData.reviews.length).toFixed(1) : 'No ratings yet'}\r\n          ratingCount={venueData.reviews ? venueData.reviews.length : 0}\r\n          timing={venueData.availability || []}\r\n          facilities={venueData.facilities || []}\r\n          pricePerHour={venueData.priceperhour}\r\n        />\r\n        <div className=\"bp-side-info\">\r\n          <BookingInfo pricePerHour={venueData.priceperhour} onBookNow={openBookingModal} />\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"bp-modal\">\r\n          <div className=\"bp-modal-content\">\r\n            <h2 className=\"bp-modal-title\">\r\n              Book Now\r\n              <span className=\"bp-close\" onClick={closeBookingModal}>&times;</span>\r\n            </h2>\r\n            <label htmlFor=\"date\">Select Date:</label>\r\n            <DatePicker\r\n              selected={selectedDate}\r\n              onChange={handleDateSelection}\r\n              minDate={new Date()}\r\n              filterDate={isDisabled}\r\n              dateFormat=\"yyyy/MM/dd\"\r\n              className=\"bp-datepicker\"\r\n            />\r\n            <label htmlFor=\"duration\">Select Duration (in hours):</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={playDuration}\r\n              onChange={handleDurationChange}\r\n            />\r\n            <label htmlFor=\"time\">Available Time Slots:</label>\r\n            <select value={selectedTime} onChange={handleTimeSelection} className=\"bp-time-slot-dropdown\">\r\n              <option value=\"\" disabled>Select a time slot</option>\r\n              {availableTimeSlots.map((slot, index) => (\r\n                <option key={index} value={slot}>{slot}</option>\r\n              ))}\r\n            </select>\r\n            <h3>Ground Price: ₹{(pricePerHour * playDuration).toFixed(2)}</h3>\r\n            <h3>Platform Fee: ₹{(pricePerHour * playDuration * platformpercentage / 100).toFixed(2)}</h3>\r\n            <h3>Total Fee: ₹{(pricePerHour * playDuration + (pricePerHour * playDuration * platformpercentage / 100)).toFixed(2)}</h3>\r\n\r\n            {sessionstate && <button onClick={bookinghandle} className=\"bp-book-now-button\">Book Now</button>}\r\n            {!sessionstate && <a href='/login'>Please log in to book a ground.</a>}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VenueDetails = ({ name, dimensions, address, image, rating, ratingCount, timing, facilities, pricePerHour }) => {\r\n  return (\r\n    <div className=\"bp-venue-details\">\r\n      <h2>{name}</h2>\r\n      <img src={image} alt={`${name}`} className=\"bp-venue-image\" />\r\n      <p>{dimensions}</p>\r\n      <p>{address}</p>\r\n      <p>Price per hour: ₹{pricePerHour}</p>\r\n      <p>Rating: {rating} ({ratingCount} reviews)</p>\r\n      <h3>Facilities</h3>\r\n      <ul>\r\n        {facilities.map((facility, index) => <li key={index}>{facility}</li>)}\r\n      </ul>\r\n      <h3>Timing</h3>\r\n      <ul>\r\n        {timing.map((t, index) => (\r\n          <li key={index}>{t.day}: {t.times.map(time => `${time.start} - ${time.end}`).join(', ')}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookingInfo = ({ pricePerHour, onBookNow }) => {\r\n  return (\r\n    <div className=\"bp-booking-info\">\r\n      <h3>Book Your Slot</h3>\r\n      <p>Price per hour: ₹{pricePerHour}</p>\r\n      <button onClick={onBookNow} className=\"bp-book-now-button\">Book Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}