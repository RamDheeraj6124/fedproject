{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\Queries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryMode = () => {\n  _s();\n  const [queries, setqueries] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkSession = async () => {\n      const response = await fetch('http://localhost:5000/admin/checksession', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUsername(data.username);\n        setqueries(data.details.queries);\n      } else {\n        navigate('/login');\n        setUsername(null);\n      }\n    };\n    checkSession();\n  }, [navigate]);\n  if (!username) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-message\",\n      children: \"You must be logged in as an admin to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"ad-dashboard-title\",\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"ad-users-title\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"ad-users-list\",\n      children: queries.map(query => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: `ad-user-${query._id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", query.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", query.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile:\", query.mobile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message:\", query.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, query._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(QueryMode, \"kG9yhnzKRfzuTFmlqNqUG8Wp+v8=\", false, function () {\n  return [useNavigate];\n});\n_c = QueryMode;\nexport default QueryMode;\nvar _c;\n$RefreshReg$(_c, \"QueryMode\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","QueryMode","_s","queries","setqueries","navigate","checkSession","response","fetch","credentials","ok","data","json","setUsername","username","details","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","query","_id","name","email","mobile","message","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Admin/Queries.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminDashboard.css';\r\n\r\n\r\nconst QueryMode = () => {\r\n    const [queries, setqueries] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            const response = await fetch('http://localhost:5000/admin/checksession', {\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setUsername(data.username);\r\n                setqueries(data.details.queries)\r\n                \r\n            } else {\r\n                navigate('/login');\r\n                setUsername(null);\r\n            }\r\n        };\r\n\r\n        checkSession();\r\n    }, [navigate]);\r\n\r\n\r\n    if (!username) {\r\n        return <div className=\"login-message\">You must be logged in as an admin to view this page.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <h1 id=\"ad-dashboard-title\">Welcome, {username}</h1>\r\n\r\n            <h2 id=\"ad-users-title\">Users</h2>\r\n            <ul id=\"ad-users-list\">\r\n                {queries.map(query => (\r\n                    <li key={query._id} id={`ad-user-${query._id}`} >\r\n                        <p>Username: {query.name}</p>\r\n                        <p>Email: {query.email}</p>\r\n                        <p>Mobile:{query.mobile}</p>\r\n                        <p>Message:{query.message}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default QueryMode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}